import { S as SvelteComponentDev, i as init, s as safe_not_equal, d as dispatch_dev, w as onMount, v as validate_slots, ai as slide, e as element, z as space, c as claim_element, b as children, f as detach_dev, C as claim_space, h as attr_dev, a6 as toggle_class, j as add_location, l as insert_dev, m as append_dev, a9 as add_render_callback, aa as create_bidirectional_transition, af as binding_callbacks, ag as bind, B as Button, p as validate_store, q as stateStore, r as component_subscribe, N as set_store_value, g as globals, x as text, A as create_component, y as claim_text, D as claim_component, k as set_style, E as mount_component, G as set_data_dev, H as transition_in, I as transition_out, J as destroy_component, ah as add_flush_callback, K as group_outros, L as check_outros, u as authStore, P as SignInButton, R as query_selector_all, n as noop } from './client.2636c8d7.js';
import { T as TextField, S as Switch } from './TextField.ae90f346.js';

/* node_modules/smelte/src/components/ProgressLinear/ProgressLinear.svelte generated by Svelte v3.24.0 */
const file = "node_modules/smelte/src/components/ProgressLinear/ProgressLinear.svelte";

function create_fragment(ctx) {
	let div2;
	let div0;
	let div0_class_value;
	let div0_style_value;
	let t;
	let div1;
	let div1_class_value;
	let div2_class_value;
	let div2_transition;
	let current;

	const block = {
		c: function create() {
			div2 = element("div");
			div0 = element("div");
			t = space();
			div1 = element("div");
			this.h();
		},
		l: function claim(nodes) {
			div2 = claim_element(nodes, "DIV", { class: true });
			var div2_nodes = children(div2);
			div0 = claim_element(div2_nodes, "DIV", { class: true, style: true });
			children(div0).forEach(detach_dev);
			t = claim_space(div2_nodes);
			div1 = claim_element(div2_nodes, "DIV", { class: true });
			children(div1).forEach(detach_dev);
			div2_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(div0, "class", div0_class_value = "bg-" + /*color*/ ctx[2] + "-500 h-1 absolute" + " svelte-mguqwa");

			attr_dev(div0, "style", div0_style_value = /*progress*/ ctx[1]
			? `width: ${/*progress*/ ctx[1]}%`
			: "");

			toggle_class(div0, "inc", !/*progress*/ ctx[1]);
			toggle_class(div0, "transition", /*progress*/ ctx[1]);
			add_location(div0, file, 56, 2, 987);
			attr_dev(div1, "class", div1_class_value = "bg-" + /*color*/ ctx[2] + "-500 h-1 absolute dec" + " svelte-mguqwa");
			toggle_class(div1, "hidden", /*progress*/ ctx[1]);
			add_location(div1, file, 61, 2, 1145);
			attr_dev(div2, "class", div2_class_value = "top-0 left-0 w-full h-1 bg-" + /*color*/ ctx[2] + "-100 overflow-hidden relative" + " svelte-mguqwa");
			toggle_class(div2, "fixed", /*app*/ ctx[0]);
			toggle_class(div2, "z-50", /*app*/ ctx[0]);
			toggle_class(div2, "hidden", /*app*/ ctx[0] && !/*initialized*/ ctx[3]);
			add_location(div2, file, 50, 0, 790);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div2, anchor);
			append_dev(div2, div0);
			append_dev(div2, t);
			append_dev(div2, div1);
			current = true;
		},
		p: function update(ctx, [dirty]) {
			if (!current || dirty & /*color*/ 4 && div0_class_value !== (div0_class_value = "bg-" + /*color*/ ctx[2] + "-500 h-1 absolute" + " svelte-mguqwa")) {
				attr_dev(div0, "class", div0_class_value);
			}

			if (!current || dirty & /*progress*/ 2 && div0_style_value !== (div0_style_value = /*progress*/ ctx[1]
			? `width: ${/*progress*/ ctx[1]}%`
			: "")) {
				attr_dev(div0, "style", div0_style_value);
			}

			if (dirty & /*color, progress*/ 6) {
				toggle_class(div0, "inc", !/*progress*/ ctx[1]);
			}

			if (dirty & /*color, progress*/ 6) {
				toggle_class(div0, "transition", /*progress*/ ctx[1]);
			}

			if (!current || dirty & /*color*/ 4 && div1_class_value !== (div1_class_value = "bg-" + /*color*/ ctx[2] + "-500 h-1 absolute dec" + " svelte-mguqwa")) {
				attr_dev(div1, "class", div1_class_value);
			}

			if (dirty & /*color, progress*/ 6) {
				toggle_class(div1, "hidden", /*progress*/ ctx[1]);
			}

			if (!current || dirty & /*color*/ 4 && div2_class_value !== (div2_class_value = "top-0 left-0 w-full h-1 bg-" + /*color*/ ctx[2] + "-100 overflow-hidden relative" + " svelte-mguqwa")) {
				attr_dev(div2, "class", div2_class_value);
			}

			if (dirty & /*color, app*/ 5) {
				toggle_class(div2, "fixed", /*app*/ ctx[0]);
			}

			if (dirty & /*color, app*/ 5) {
				toggle_class(div2, "z-50", /*app*/ ctx[0]);
			}

			if (dirty & /*color, app, initialized*/ 13) {
				toggle_class(div2, "hidden", /*app*/ ctx[0] && !/*initialized*/ ctx[3]);
			}
		},
		i: function intro(local) {
			if (current) return;

			add_render_callback(() => {
				if (!div2_transition) div2_transition = create_bidirectional_transition(div2, slide, { duration: 300 }, true);
				div2_transition.run(1);
			});

			current = true;
		},
		o: function outro(local) {
			if (!div2_transition) div2_transition = create_bidirectional_transition(div2, slide, { duration: 300 }, false);
			div2_transition.run(0);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(div2);
			if (detaching && div2_transition) div2_transition.end();
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props, $$invalidate) {
	let { app = false } = $$props;
	let { progress = 0 } = $$props;
	let { color = "primary" } = $$props;
	let initialized = false;

	onMount(() => {
		if (!app) return;

		setTimeout(
			() => {
				$$invalidate(3, initialized = true);
			},
			200
		);
	});

	const writable_props = ["app", "progress", "color"];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<ProgressLinear> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("ProgressLinear", $$slots, []);

	$$self.$set = $$props => {
		if ("app" in $$props) $$invalidate(0, app = $$props.app);
		if ("progress" in $$props) $$invalidate(1, progress = $$props.progress);
		if ("color" in $$props) $$invalidate(2, color = $$props.color);
	};

	$$self.$capture_state = () => ({
		onMount,
		slide,
		app,
		progress,
		color,
		initialized
	});

	$$self.$inject_state = $$props => {
		if ("app" in $$props) $$invalidate(0, app = $$props.app);
		if ("progress" in $$props) $$invalidate(1, progress = $$props.progress);
		if ("color" in $$props) $$invalidate(2, color = $$props.color);
		if ("initialized" in $$props) $$invalidate(3, initialized = $$props.initialized);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [app, progress, color, initialized];
}

class ProgressLinear extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, { app: 0, progress: 1, color: 2 });

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "ProgressLinear",
			options,
			id: create_fragment.name
		});
	}

	get app() {
		throw new Error("<ProgressLinear>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set app(value) {
		throw new Error("<ProgressLinear>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get progress() {
		throw new Error("<ProgressLinear>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set progress(value) {
		throw new Error("<ProgressLinear>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get color() {
		throw new Error("<ProgressLinear>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set color(value) {
		throw new Error("<ProgressLinear>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* src/components/BotStatus.svelte generated by Svelte v3.24.0 */

const { console: console_1 } = globals;
const file$1 = "src/components/BotStatus.svelte";

// (410:4) {#if botstatus.currentfloor !== 0}
function create_if_block(ctx) {
	let div2;
	let div0;
	let nobr;
	let label;
	let t0;
	let t1;
	let strong;
	let t2;
	let t3;
	let t4;
	let t5;
	let t6;
	let t7;
	let t8;
	let div1;
	let progresslinear;
	let current;

	progresslinear = new ProgressLinear({
			props: { progress: /*progress*/ ctx[16] },
			$$inline: true
		});

	const block = {
		c: function create() {
			div2 = element("div");
			div0 = element("div");
			nobr = element("nobr");
			label = element("label");
			t0 = text("Этаж");
			t1 = space();
			strong = element("strong");
			t2 = text(/*floornumber*/ ctx[11]);
			t3 = space();
			t4 = text(/*low*/ ctx[9]);
			t5 = text(" - ");
			t6 = text(/*hight*/ ctx[10]);
			t7 = text("  ");
			t8 = space();
			div1 = element("div");
			create_component(progresslinear.$$.fragment);
			this.h();
		},
		l: function claim(nodes) {
			div2 = claim_element(nodes, "DIV", { class: true });
			var div2_nodes = children(div2);
			div0 = claim_element(div2_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			nobr = claim_element(div0_nodes, "NOBR", {});
			var nobr_nodes = children(nobr);
			label = claim_element(nobr_nodes, "LABEL", { class: true });
			var label_nodes = children(label);
			t0 = claim_text(label_nodes, "Этаж");
			label_nodes.forEach(detach_dev);
			t1 = claim_space(nobr_nodes);
			strong = claim_element(nobr_nodes, "STRONG", {});
			var strong_nodes = children(strong);
			t2 = claim_text(strong_nodes, /*floornumber*/ ctx[11]);
			strong_nodes.forEach(detach_dev);
			t3 = claim_space(nobr_nodes);
			t4 = claim_text(nobr_nodes, /*low*/ ctx[9]);
			t5 = claim_text(nobr_nodes, " - ");
			t6 = claim_text(nobr_nodes, /*hight*/ ctx[10]);
			t7 = claim_text(nobr_nodes, "  ");
			nobr_nodes.forEach(detach_dev);
			div0_nodes.forEach(detach_dev);
			t8 = claim_space(div2_nodes);
			div1 = claim_element(div2_nodes, "DIV", { class: true, style: true });
			var div1_nodes = children(div1);
			claim_component(progresslinear.$$.fragment, div1_nodes);
			div1_nodes.forEach(detach_dev);
			div2_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(label, "class", "svelte-soetfq");
			add_location(label, file$1, 413, 20, 11986);
			add_location(strong, file$1, 414, 20, 12026);
			add_location(nobr, file$1, 412, 16, 11959);
			attr_dev(div0, "class", "leftitem svelte-soetfq");
			add_location(div0, file$1, 411, 12, 11920);
			attr_dev(div1, "class", "rightitem svelte-soetfq");
			set_style(div1, "margin-top", "9px");
			set_style(div1, "height", "4px");
			set_style(div1, "width", "100%");
			set_style(div1, "background-color", "#f5ce54");
			add_location(div1, file$1, 418, 12, 12160);
			attr_dev(div2, "class", "row svelte-soetfq");
			add_location(div2, file$1, 410, 8, 11890);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div2, anchor);
			append_dev(div2, div0);
			append_dev(div0, nobr);
			append_dev(nobr, label);
			append_dev(label, t0);
			append_dev(nobr, t1);
			append_dev(nobr, strong);
			append_dev(strong, t2);
			append_dev(nobr, t3);
			append_dev(nobr, t4);
			append_dev(nobr, t5);
			append_dev(nobr, t6);
			append_dev(nobr, t7);
			append_dev(div2, t8);
			append_dev(div2, div1);
			mount_component(progresslinear, div1, null);
			current = true;
		},
		p: function update(ctx, dirty) {
			if (!current || dirty[0] & /*floornumber*/ 2048) set_data_dev(t2, /*floornumber*/ ctx[11]);
			if (!current || dirty[0] & /*low*/ 512) set_data_dev(t4, /*low*/ ctx[9]);
			if (!current || dirty[0] & /*hight*/ 1024) set_data_dev(t6, /*hight*/ ctx[10]);
			const progresslinear_changes = {};
			if (dirty[0] & /*progress*/ 65536) progresslinear_changes.progress = /*progress*/ ctx[16];
			progresslinear.$set(progresslinear_changes);
		},
		i: function intro(local) {
			if (current) return;
			transition_in(progresslinear.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(progresslinear.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(div2);
			destroy_component(progresslinear);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block.name,
		type: "if",
		source: "(410:4) {#if botstatus.currentfloor !== 0}",
		ctx
	});

	return block;
}

// (622:4) <Button on:click={savesettings} href="/">
function create_default_slot_3(ctx) {
	let t;

	const block = {
		c: function create() {
			t = text("Сохранить");
		},
		l: function claim(nodes) {
			t = claim_text(nodes, "Сохранить");
		},
		m: function mount(target, anchor) {
			insert_dev(target, t, anchor);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot_3.name,
		type: "slot",
		source: "(622:4) <Button on:click={savesettings} href=\\\"/\\\">",
		ctx
	});

	return block;
}

// (625:4) <Button color="alert" on:click={panicsale}>
function create_default_slot_2(ctx) {
	let t;

	const block = {
		c: function create() {
			t = text("PANICSALE");
		},
		l: function claim(nodes) {
			t = claim_text(nodes, "PANICSALE");
		},
		m: function mount(target, anchor) {
			insert_dev(target, t, anchor);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot_2.name,
		type: "slot",
		source: "(625:4) <Button color=\\\"alert\\\" on:click={panicsale}>",
		ctx
	});

	return block;
}

// (628:4) <Button color="alert" on:click={resetsettings}>
function create_default_slot_1(ctx) {
	let t;

	const block = {
		c: function create() {
			t = text("Сбросить к стартовым настройкам");
		},
		l: function claim(nodes) {
			t = claim_text(nodes, "Сбросить к стартовым настройкам");
		},
		m: function mount(target, anchor) {
			insert_dev(target, t, anchor);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot_1.name,
		type: "slot",
		source: "(628:4) <Button color=\\\"alert\\\" on:click={resetsettings}>",
		ctx
	});

	return block;
}

// (631:4) <Button color="alert" on:click={deletebot} href="/">
function create_default_slot(ctx) {
	let t;

	const block = {
		c: function create() {
			t = text("Удалить");
		},
		l: function claim(nodes) {
			t = claim_text(nodes, "Удалить");
		},
		m: function mount(target, anchor) {
			insert_dev(target, t, anchor);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot.name,
		type: "slot",
		source: "(631:4) <Button color=\\\"alert\\\" on:click={deletebot} href=\\\"/\\\">",
		ctx
	});

	return block;
}

function create_fragment$1(ctx) {
	let main;
	let div2;
	let div1;
	let div0;
	let textfield0;
	let updating_value;
	let t0;
	let div4;
	let div3;
	let label0;
	let t1;
	let t2;
	let br0;
	let t3;
	let strong0;
	let t4_value = /*botstatus*/ ctx[2].rezhim + "";
	let t4;
	let t5;
	let t6;
	let div10;
	let div5;
	let label1;
	let t7;
	let t8;
	let br1;
	let t9;
	let span0;
	let t10;
	let t11;
	let br2;
	let t12;
	let div9;
	let div6;
	let label2;
	let t13;
	let t14;
	let div7;
	let label3;
	let t15;
	let t16;
	let br3;
	let t17;
	let span1;
	let t18_value = /*botfinance*/ ctx[1].startdepo + "";
	let t18;
	let t19;
	let div8;
	let label4;
	let t20;
	let t21;
	let br4;
	let t22;
	let span2;
	let t23_value = /*botfinance*/ ctx[1].depo + "";
	let t23;
	let t24;
	let div14;
	let div13;
	let div11;
	let label5;
	let t25;
	let t26;
	let br5;
	let t27;
	let span3;
	let t28;
	let t29;
	let br6;
	let t30;
	let span4;
	let t31;
	let t32;
	let t33;
	let t34;
	let br7;
	let t35;
	let div12;
	let label6;
	let t36;
	let t37;
	let br8;
	let t38;
	let span5;
	let t39_value = /*salestodaysum*/ ctx[19].toFixed(/*botsettings*/ ctx[0].digitprice) + "";
	let t39;
	let t40;
	let br9;
	let t41;
	let span6;
	let t42;
	let t43;
	let t44;
	let t45;
	let br10;
	let t46;
	let div16;
	let div15;
	let table;
	let tr0;
	let td0;
	let label7;
	let t47_value = /*botsettings*/ ctx[0].quotacoin + "";
	let t47;
	let t48;
	let t49;
	let td1;
	let t50_value = /*botfinance*/ ctx[1].quotanal + "";
	let t50;
	let t51;
	let td2;
	let t52_value = /*quotasum*/ ctx[7].toFixed(/*botsettings*/ ctx[0].digitq) + "";
	let t52;
	let t53;
	let br11;
	let t54;
	let t55_value = (/*last_price*/ ctx[4] * /*quotasum*/ ctx[7]).toFixed(/*botsettings*/ ctx[0].digitq) + "";
	let t55;
	let t56;
	let t57_value = /*botsettings*/ ctx[0].basecoin + "";
	let t57;
	let t58;
	let t59;
	let tr1;
	let td3;
	let label8;
	let t60_value = /*botsettings*/ ctx[0].quotacoin + "";
	let t60;
	let t61;
	let t62;
	let td4;
	let t63_value = /*botfinance*/ ctx[1].quotainorders + "";
	let t63;
	let t64;
	let tr2;
	let td5;
	let label9;
	let t65_value = /*botsettings*/ ctx[0].basecoin + "";
	let t65;
	let t66;
	let t67;
	let td6;
	let t68_value = (/*botfinance*/ ctx[1].basenal * 1).toFixed(/*botsettings*/ ctx[0].digitprice) + "";
	let t68;
	let t69;
	let td7;
	let t70_value = /*basesum*/ ctx[8].toFixed(/*botsettings*/ ctx[0].digitprice) + "";
	let t70;
	let t71;
	let tr3;
	let td8;
	let label10;
	let t72_value = /*botsettings*/ ctx[0].basecoin + "";
	let t72;
	let t73;
	let t74;
	let td9;
	let t75_value = /*botfinance*/ ctx[1].baseinorders + "";
	let t75;
	let t76;
	let div20;
	let div19;
	let div17;
	let label11;
	let t77;
	let t78;
	let br12;
	let t79;
	let label12;
	let t80;
	let t81;
	let br13;
	let t82;
	let label13;
	let t83;
	let t84;
	let div18;
	let t85;
	let t86;
	let br14;
	let t87;
	let strong1;
	let t88;
	let t89;
	let t90_value = /*salestodaysum*/ ctx[19].toFixed(/*botsettings*/ ctx[0].digitprice) + "";
	let t90;
	let t91;
	let t92_value = /*botsettings*/ ctx[0].basecoin + "";
	let t92;
	let t93;
	let br15;
	let t94;
	let t95_value = (/*salesallsum*/ ctx[13] / /*salesall*/ ctx[12] || 0).toFixed(/*botsettings*/ ctx[0].digitprice) + "";
	let t95;
	let t96;
	let t97_value = /*botsettings*/ ctx[0].basecoin + "";
	let t97;
	let t98;
	let div24;
	let div23;
	let div21;
	let label14;
	let t99;
	let t100;
	let br16;
	let t101;
	let label15;
	let t102;
	let t103;
	let div22;
	let t104_value = /*openfloors*/ ctx[17].count + "";
	let t104;
	let t105;
	let br17;
	let t106;
	let t107_value = /*openfloors*/ ctx[17].sprice + "";
	let t107;
	let t108;
	let t109_value = /*botsettings*/ ctx[0].basecoin + "";
	let t109;
	let t110;
	let br18;
	let t111;
	let div27;
	let div25;
	let label16;
	let t112_value = (/*botonoff*/ ctx[3] ? "Включен" : "Выключен") + "";
	let t112;
	let t113;
	let br19;
	let t114;
	let switch0;
	let updating_value_1;
	let t115;
	let div26;
	let label17;
	let t116;
	let t117;
	let br20;
	let t118;
	let switch1;
	let updating_value_2;
	let t119;
	let div30;
	let div28;
	let label18;
	let t120;
	let t121;
	let br21;
	let t122;
	let t123;
	let t124;
	let t125_value = /*botsettings*/ ctx[0].quotacoin + "";
	let t125;
	let t126;
	let t127;
	let t128;
	let t129_value = /*botsettings*/ ctx[0].basecoin + "";
	let t129;
	let t130;
	let div29;
	let textfield1;
	let updating_value_3;
	let t131;
	let div33;
	let div31;
	let textfield2;
	let updating_value_4;
	let t132;
	let div32;
	let textfield3;
	let updating_value_5;
	let t133;
	let div36;
	let div34;
	let label19;
	let t134;
	let t135;
	let div35;
	let textfield4;
	let updating_value_6;
	let t136;
	let div39;
	let div37;
	let label20;
	let t137;
	let t138;
	let div38;
	let textfield5;
	let updating_value_7;
	let t139;
	let button0;
	let t140;
	let br22;
	let t141;
	let br23;
	let t142;
	let button1;
	let t143;
	let br24;
	let t144;
	let br25;
	let t145;
	let button2;
	let t146;
	let br26;
	let t147;
	let br27;
	let t148;
	let button3;
	let current;

	function textfield0_value_binding(value) {
		/*textfield0_value_binding*/ ctx[25].call(null, value);
	}

	let textfield0_props = { label: "Комментарий", outlined: true };

	if (/*botsettings*/ ctx[0].comment !== void 0) {
		textfield0_props.value = /*botsettings*/ ctx[0].comment;
	}

	textfield0 = new TextField({ props: textfield0_props, $$inline: true });
	binding_callbacks.push(() => bind(textfield0, "value", textfield0_value_binding));
	let if_block = /*botstatus*/ ctx[2].currentfloor !== 0 && create_if_block(ctx);

	function switch0_value_binding(value) {
		/*switch0_value_binding*/ ctx[26].call(null, value);
	}

	let switch0_props = {};

	if (/*botonoff*/ ctx[3] !== void 0) {
		switch0_props.value = /*botonoff*/ ctx[3];
	}

	switch0 = new Switch({ props: switch0_props, $$inline: true });
	binding_callbacks.push(() => bind(switch0, "value", switch0_value_binding));

	function switch1_value_binding(value) {
		/*switch1_value_binding*/ ctx[27].call(null, value);
	}

	let switch1_props = {
		classes: "inline-flex items-right mb-2 cursor-pointer z-10"
	};

	if (/*botsettings*/ ctx[0].handyzapretnazakup !== void 0) {
		switch1_props.value = /*botsettings*/ ctx[0].handyzapretnazakup;
	}

	switch1 = new Switch({ props: switch1_props, $$inline: true });
	binding_callbacks.push(() => bind(switch1, "value", switch1_value_binding));

	function textfield1_value_binding(value) {
		/*textfield1_value_binding*/ ctx[28].call(null, value);
	}

	let textfield1_props = {
		label: "% от депо",
		outlined: true,
		size: "10"
	};

	if (/*botsettings*/ ctx[0].ordersize !== void 0) {
		textfield1_props.value = /*botsettings*/ ctx[0].ordersize;
	}

	textfield1 = new TextField({ props: textfield1_props, $$inline: true });
	binding_callbacks.push(() => bind(textfield1, "value", textfield1_value_binding));

	function textfield2_value_binding(value) {
		/*textfield2_value_binding*/ ctx[29].call(null, value);
	}

	let textfield2_props = { label: "MA1, мин", outlined: true };

	if (/*botsettings*/ ctx[0].ma1 !== void 0) {
		textfield2_props.value = /*botsettings*/ ctx[0].ma1;
	}

	textfield2 = new TextField({ props: textfield2_props, $$inline: true });
	binding_callbacks.push(() => bind(textfield2, "value", textfield2_value_binding));

	function textfield3_value_binding(value) {
		/*textfield3_value_binding*/ ctx[30].call(null, value);
	}

	let textfield3_props = { label: "MA2, мин", outlined: true };

	if (/*botsettings*/ ctx[0].ma2 !== void 0) {
		textfield3_props.value = /*botsettings*/ ctx[0].ma2;
	}

	textfield3 = new TextField({ props: textfield3_props, $$inline: true });
	binding_callbacks.push(() => bind(textfield3, "value", textfield3_value_binding));

	function textfield4_value_binding(value) {
		/*textfield4_value_binding*/ ctx[31].call(null, value);
	}

	let textfield4_props = { label: "", outlined: true, size: "10" };

	if (/*botsettings*/ ctx[0].maxpriceforzakup !== void 0) {
		textfield4_props.value = /*botsettings*/ ctx[0].maxpriceforzakup;
	}

	textfield4 = new TextField({ props: textfield4_props, $$inline: true });
	binding_callbacks.push(() => bind(textfield4, "value", textfield4_value_binding));

	function textfield5_value_binding(value) {
		/*textfield5_value_binding*/ ctx[32].call(null, value);
	}

	let textfield5_props = { label: "", outlined: true, size: "10" };

	if (/*botsettings*/ ctx[0].minpriceforzakup !== void 0) {
		textfield5_props.value = /*botsettings*/ ctx[0].minpriceforzakup;
	}

	textfield5 = new TextField({ props: textfield5_props, $$inline: true });
	binding_callbacks.push(() => bind(textfield5, "value", textfield5_value_binding));

	button0 = new Button({
			props: {
				href: "/",
				$$slots: { default: [create_default_slot_3] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	button0.$on("click", /*savesettings*/ ctx[21]);

	button1 = new Button({
			props: {
				color: "alert",
				$$slots: { default: [create_default_slot_2] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	button1.$on("click", /*panicsale*/ ctx[24]);

	button2 = new Button({
			props: {
				color: "alert",
				$$slots: { default: [create_default_slot_1] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	button2.$on("click", /*resetsettings*/ ctx[22]);

	button3 = new Button({
			props: {
				color: "alert",
				href: "/",
				$$slots: { default: [create_default_slot] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	button3.$on("click", /*deletebot*/ ctx[23]);

	const block = {
		c: function create() {
			main = element("main");
			div2 = element("div");
			div1 = element("div");
			div0 = element("div");
			create_component(textfield0.$$.fragment);
			t0 = space();
			div4 = element("div");
			div3 = element("div");
			label0 = element("label");
			t1 = text("Текущий режим");
			t2 = space();
			br0 = element("br");
			t3 = space();
			strong0 = element("strong");
			t4 = text(t4_value);
			t5 = space();
			if (if_block) if_block.c();
			t6 = space();
			div10 = element("div");
			div5 = element("div");
			label1 = element("label");
			t7 = text("Цена");
			t8 = space();
			br1 = element("br");
			t9 = space();
			span0 = element("span");
			t10 = text(/*last_price*/ ctx[4]);
			t11 = space();
			br2 = element("br");
			t12 = space();
			div9 = element("div");
			div6 = element("div");
			label2 = element("label");
			t13 = text("Баланс");
			t14 = space();
			div7 = element("div");
			label3 = element("label");
			t15 = text("Старт");
			t16 = space();
			br3 = element("br");
			t17 = space();
			span1 = element("span");
			t18 = text(t18_value);
			t19 = space();
			div8 = element("div");
			label4 = element("label");
			t20 = text("Сегодня");
			t21 = space();
			br4 = element("br");
			t22 = space();
			span2 = element("span");
			t23 = text(t23_value);
			t24 = space();
			div14 = element("div");
			div13 = element("div");
			div11 = element("div");
			label5 = element("label");
			t25 = text("Прибыль всего");
			t26 = space();
			br5 = element("br");
			t27 = space();
			span3 = element("span");
			t28 = text(/*profitsum*/ ctx[5]);
			t29 = space();
			br6 = element("br");
			t30 = space();
			span4 = element("span");
			t31 = text("(");
			t32 = text(/*profitsumproc*/ ctx[6]);
			t33 = text(" %)");
			t34 = space();
			br7 = element("br");
			t35 = space();
			div12 = element("div");
			label6 = element("label");
			t36 = text("Прибыль сегодня");
			t37 = space();
			br8 = element("br");
			t38 = space();
			span5 = element("span");
			t39 = text(t39_value);
			t40 = space();
			br9 = element("br");
			t41 = space();
			span6 = element("span");
			t42 = text("(");
			t43 = text(/*profittodayproc*/ ctx[18]);
			t44 = text(" %)");
			t45 = space();
			br10 = element("br");
			t46 = space();
			div16 = element("div");
			div15 = element("div");
			table = element("table");
			tr0 = element("tr");
			td0 = element("td");
			label7 = element("label");
			t47 = text(t47_value);
			t48 = text(" в наличии");
			t49 = space();
			td1 = element("td");
			t50 = text(t50_value);
			t51 = space();
			td2 = element("td");
			t52 = text(t52_value);
			t53 = space();
			br11 = element("br");
			t54 = text("\n                        (");
			t55 = text(t55_value);
			t56 = space();
			t57 = text(t57_value);
			t58 = text(")");
			t59 = space();
			tr1 = element("tr");
			td3 = element("td");
			label8 = element("label");
			t60 = text(t60_value);
			t61 = text(" в ордерах");
			t62 = space();
			td4 = element("td");
			t63 = text(t63_value);
			t64 = space();
			tr2 = element("tr");
			td5 = element("td");
			label9 = element("label");
			t65 = text(t65_value);
			t66 = text(" в наличии");
			t67 = space();
			td6 = element("td");
			t68 = text(t68_value);
			t69 = space();
			td7 = element("td");
			t70 = text(t70_value);
			t71 = space();
			tr3 = element("tr");
			td8 = element("td");
			label10 = element("label");
			t72 = text(t72_value);
			t73 = text(" в ордерах");
			t74 = space();
			td9 = element("td");
			t75 = text(t75_value);
			t76 = space();
			div20 = element("div");
			div19 = element("div");
			div17 = element("div");
			label11 = element("label");
			t77 = text("Продажи");
			t78 = space();
			br12 = element("br");
			t79 = space();
			label12 = element("label");
			t80 = text("Продажи сегодня");
			t81 = space();
			br13 = element("br");
			t82 = space();
			label13 = element("label");
			t83 = text("Ср. прибыль в сделке");
			t84 = space();
			div18 = element("div");
			t85 = text(/*salesall*/ ctx[12]);
			t86 = space();
			br14 = element("br");
			t87 = space();
			strong1 = element("strong");
			t88 = text(/*salestoday*/ ctx[20]);
			t89 = text("\n                (");
			t90 = text(t90_value);
			t91 = space();
			t92 = text(t92_value);
			t93 = text(")\n                ");
			br15 = element("br");
			t94 = space();
			t95 = text(t95_value);
			t96 = space();
			t97 = text(t97_value);
			t98 = space();
			div24 = element("div");
			div23 = element("div");
			div21 = element("div");
			label14 = element("label");
			t99 = text("Открытых сделок");
			t100 = space();
			br16 = element("br");
			t101 = space();
			label15 = element("label");
			t102 = text("Средняя цена закупки");
			t103 = space();
			div22 = element("div");
			t104 = text(t104_value);
			t105 = space();
			br17 = element("br");
			t106 = space();
			t107 = text(t107_value);
			t108 = space();
			t109 = text(t109_value);
			t110 = space();
			br18 = element("br");
			t111 = space();
			div27 = element("div");
			div25 = element("div");
			label16 = element("label");
			t112 = text(t112_value);
			t113 = space();
			br19 = element("br");
			t114 = space();
			create_component(switch0.$$.fragment);
			t115 = space();
			div26 = element("div");
			label17 = element("label");
			t116 = text("Запрет на закуп");
			t117 = space();
			br20 = element("br");
			t118 = space();
			create_component(switch1.$$.fragment);
			t119 = space();
			div30 = element("div");
			div28 = element("div");
			label18 = element("label");
			t120 = text("Объем ордера");
			t121 = space();
			br21 = element("br");
			t122 = text("\n            ~ ");
			t123 = text(/*ordersizeinquota*/ ctx[14]);
			t124 = space();
			t125 = text(t125_value);
			t126 = text(", ");
			t127 = text(/*ordersizeinbase*/ ctx[15]);
			t128 = space();
			t129 = text(t129_value);
			t130 = text("\n          \n        ");
			div29 = element("div");
			create_component(textfield1.$$.fragment);
			t131 = space();
			div33 = element("div");
			div31 = element("div");
			create_component(textfield2.$$.fragment);
			t132 = text("\n          \n        ");
			div32 = element("div");
			create_component(textfield3.$$.fragment);
			t133 = space();
			div36 = element("div");
			div34 = element("div");
			label19 = element("label");
			t134 = text("Не закупать, если цена больше");
			t135 = text("\n          \n        ");
			div35 = element("div");
			create_component(textfield4.$$.fragment);
			t136 = space();
			div39 = element("div");
			div37 = element("div");
			label20 = element("label");
			t137 = text("Не закупать, если цена меньше");
			t138 = space();
			div38 = element("div");
			create_component(textfield5.$$.fragment);
			t139 = space();
			create_component(button0.$$.fragment);
			t140 = space();
			br22 = element("br");
			t141 = space();
			br23 = element("br");
			t142 = space();
			create_component(button1.$$.fragment);
			t143 = space();
			br24 = element("br");
			t144 = space();
			br25 = element("br");
			t145 = space();
			create_component(button2.$$.fragment);
			t146 = space();
			br26 = element("br");
			t147 = space();
			br27 = element("br");
			t148 = space();
			create_component(button3.$$.fragment);
			this.h();
		},
		l: function claim(nodes) {
			main = claim_element(nodes, "MAIN", { class: true });
			var main_nodes = children(main);
			div2 = claim_element(main_nodes, "DIV", { class: true });
			var div2_nodes = children(div2);
			div1 = claim_element(div2_nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			div0 = claim_element(div1_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			claim_component(textfield0.$$.fragment, div0_nodes);
			div0_nodes.forEach(detach_dev);
			div1_nodes.forEach(detach_dev);
			div2_nodes.forEach(detach_dev);
			t0 = claim_space(main_nodes);
			div4 = claim_element(main_nodes, "DIV", { class: true });
			var div4_nodes = children(div4);
			div3 = claim_element(div4_nodes, "DIV", { class: true });
			var div3_nodes = children(div3);
			label0 = claim_element(div3_nodes, "LABEL", { class: true });
			var label0_nodes = children(label0);
			t1 = claim_text(label0_nodes, "Текущий режим");
			label0_nodes.forEach(detach_dev);
			t2 = claim_space(div3_nodes);
			br0 = claim_element(div3_nodes, "BR", {});
			t3 = claim_space(div3_nodes);
			strong0 = claim_element(div3_nodes, "STRONG", { class: true });
			var strong0_nodes = children(strong0);
			t4 = claim_text(strong0_nodes, t4_value);
			strong0_nodes.forEach(detach_dev);
			div3_nodes.forEach(detach_dev);
			div4_nodes.forEach(detach_dev);
			t5 = claim_space(main_nodes);
			if (if_block) if_block.l(main_nodes);
			t6 = claim_space(main_nodes);
			div10 = claim_element(main_nodes, "DIV", { class: true });
			var div10_nodes = children(div10);
			div5 = claim_element(div10_nodes, "DIV", { class: true });
			var div5_nodes = children(div5);
			label1 = claim_element(div5_nodes, "LABEL", { class: true });
			var label1_nodes = children(label1);
			t7 = claim_text(label1_nodes, "Цена");
			label1_nodes.forEach(detach_dev);
			t8 = claim_space(div5_nodes);
			br1 = claim_element(div5_nodes, "BR", {});
			t9 = claim_space(div5_nodes);
			span0 = claim_element(div5_nodes, "SPAN", { class: true });
			var span0_nodes = children(span0);
			t10 = claim_text(span0_nodes, /*last_price*/ ctx[4]);
			span0_nodes.forEach(detach_dev);
			t11 = claim_space(div5_nodes);
			br2 = claim_element(div5_nodes, "BR", {});
			div5_nodes.forEach(detach_dev);
			t12 = claim_space(div10_nodes);
			div9 = claim_element(div10_nodes, "DIV", { class: true });
			var div9_nodes = children(div9);
			div6 = claim_element(div9_nodes, "DIV", { class: true });
			var div6_nodes = children(div6);
			label2 = claim_element(div6_nodes, "LABEL", { class: true });
			var label2_nodes = children(label2);
			t13 = claim_text(label2_nodes, "Баланс");
			label2_nodes.forEach(detach_dev);
			div6_nodes.forEach(detach_dev);
			t14 = claim_space(div9_nodes);
			div7 = claim_element(div9_nodes, "DIV", { class: true });
			var div7_nodes = children(div7);
			label3 = claim_element(div7_nodes, "LABEL", { class: true });
			var label3_nodes = children(label3);
			t15 = claim_text(label3_nodes, "Старт");
			label3_nodes.forEach(detach_dev);
			t16 = claim_space(div7_nodes);
			br3 = claim_element(div7_nodes, "BR", {});
			t17 = claim_space(div7_nodes);
			span1 = claim_element(div7_nodes, "SPAN", { class: true });
			var span1_nodes = children(span1);
			t18 = claim_text(span1_nodes, t18_value);
			span1_nodes.forEach(detach_dev);
			div7_nodes.forEach(detach_dev);
			t19 = claim_space(div9_nodes);
			div8 = claim_element(div9_nodes, "DIV", { class: true });
			var div8_nodes = children(div8);
			label4 = claim_element(div8_nodes, "LABEL", { class: true });
			var label4_nodes = children(label4);
			t20 = claim_text(label4_nodes, "Сегодня");
			label4_nodes.forEach(detach_dev);
			t21 = claim_space(div8_nodes);
			br4 = claim_element(div8_nodes, "BR", {});
			t22 = claim_space(div8_nodes);
			span2 = claim_element(div8_nodes, "SPAN", { class: true });
			var span2_nodes = children(span2);
			t23 = claim_text(span2_nodes, t23_value);
			span2_nodes.forEach(detach_dev);
			div8_nodes.forEach(detach_dev);
			div9_nodes.forEach(detach_dev);
			div10_nodes.forEach(detach_dev);
			t24 = claim_space(main_nodes);
			div14 = claim_element(main_nodes, "DIV", { class: true });
			var div14_nodes = children(div14);
			div13 = claim_element(div14_nodes, "DIV", { class: true });
			var div13_nodes = children(div13);
			div11 = claim_element(div13_nodes, "DIV", { class: true });
			var div11_nodes = children(div11);
			label5 = claim_element(div11_nodes, "LABEL", { class: true });
			var label5_nodes = children(label5);
			t25 = claim_text(label5_nodes, "Прибыль всего");
			label5_nodes.forEach(detach_dev);
			t26 = claim_space(div11_nodes);
			br5 = claim_element(div11_nodes, "BR", {});
			t27 = claim_space(div11_nodes);
			span3 = claim_element(div11_nodes, "SPAN", {});
			var span3_nodes = children(span3);
			t28 = claim_text(span3_nodes, /*profitsum*/ ctx[5]);
			span3_nodes.forEach(detach_dev);
			t29 = claim_space(div11_nodes);
			br6 = claim_element(div11_nodes, "BR", {});
			t30 = claim_space(div11_nodes);
			span4 = claim_element(div11_nodes, "SPAN", {});
			var span4_nodes = children(span4);
			t31 = claim_text(span4_nodes, "(");
			t32 = claim_text(span4_nodes, /*profitsumproc*/ ctx[6]);
			t33 = claim_text(span4_nodes, " %)");
			span4_nodes.forEach(detach_dev);
			t34 = claim_space(div11_nodes);
			br7 = claim_element(div11_nodes, "BR", {});
			div11_nodes.forEach(detach_dev);
			t35 = claim_space(div13_nodes);
			div12 = claim_element(div13_nodes, "DIV", { class: true });
			var div12_nodes = children(div12);
			label6 = claim_element(div12_nodes, "LABEL", { class: true });
			var label6_nodes = children(label6);
			t36 = claim_text(label6_nodes, "Прибыль сегодня");
			label6_nodes.forEach(detach_dev);
			t37 = claim_space(div12_nodes);
			br8 = claim_element(div12_nodes, "BR", {});
			t38 = claim_space(div12_nodes);
			span5 = claim_element(div12_nodes, "SPAN", {});
			var span5_nodes = children(span5);
			t39 = claim_text(span5_nodes, t39_value);
			span5_nodes.forEach(detach_dev);
			t40 = claim_space(div12_nodes);
			br9 = claim_element(div12_nodes, "BR", {});
			t41 = claim_space(div12_nodes);
			span6 = claim_element(div12_nodes, "SPAN", {});
			var span6_nodes = children(span6);
			t42 = claim_text(span6_nodes, "(");
			t43 = claim_text(span6_nodes, /*profittodayproc*/ ctx[18]);
			t44 = claim_text(span6_nodes, " %)");
			span6_nodes.forEach(detach_dev);
			t45 = claim_space(div12_nodes);
			br10 = claim_element(div12_nodes, "BR", {});
			div12_nodes.forEach(detach_dev);
			div13_nodes.forEach(detach_dev);
			div14_nodes.forEach(detach_dev);
			t46 = claim_space(main_nodes);
			div16 = claim_element(main_nodes, "DIV", { class: true });
			var div16_nodes = children(div16);
			div15 = claim_element(div16_nodes, "DIV", { class: true });
			var div15_nodes = children(div15);
			table = claim_element(div15_nodes, "TABLE", { class: true });
			var table_nodes = children(table);
			tr0 = claim_element(table_nodes, "TR", { class: true });
			var tr0_nodes = children(tr0);
			td0 = claim_element(tr0_nodes, "TD", { class: true });
			var td0_nodes = children(td0);
			label7 = claim_element(td0_nodes, "LABEL", { class: true });
			var label7_nodes = children(label7);
			t47 = claim_text(label7_nodes, t47_value);
			t48 = claim_text(label7_nodes, " в наличии");
			label7_nodes.forEach(detach_dev);
			td0_nodes.forEach(detach_dev);
			t49 = claim_space(tr0_nodes);
			td1 = claim_element(tr0_nodes, "TD", { class: true });
			var td1_nodes = children(td1);
			t50 = claim_text(td1_nodes, t50_value);
			td1_nodes.forEach(detach_dev);
			t51 = claim_space(tr0_nodes);
			td2 = claim_element(tr0_nodes, "TD", { rowspan: true, class: true });
			var td2_nodes = children(td2);
			t52 = claim_text(td2_nodes, t52_value);
			t53 = claim_space(td2_nodes);
			br11 = claim_element(td2_nodes, "BR", {});
			t54 = claim_text(td2_nodes, "\n                        (");
			t55 = claim_text(td2_nodes, t55_value);
			t56 = claim_space(td2_nodes);
			t57 = claim_text(td2_nodes, t57_value);
			t58 = claim_text(td2_nodes, ")");
			td2_nodes.forEach(detach_dev);
			tr0_nodes.forEach(detach_dev);
			t59 = claim_space(table_nodes);
			tr1 = claim_element(table_nodes, "TR", {});
			var tr1_nodes = children(tr1);
			td3 = claim_element(tr1_nodes, "TD", { class: true });
			var td3_nodes = children(td3);
			label8 = claim_element(td3_nodes, "LABEL", { class: true });
			var label8_nodes = children(label8);
			t60 = claim_text(label8_nodes, t60_value);
			t61 = claim_text(label8_nodes, " в ордерах");
			label8_nodes.forEach(detach_dev);
			td3_nodes.forEach(detach_dev);
			t62 = claim_space(tr1_nodes);
			td4 = claim_element(tr1_nodes, "TD", { class: true });
			var td4_nodes = children(td4);
			t63 = claim_text(td4_nodes, t63_value);
			td4_nodes.forEach(detach_dev);
			tr1_nodes.forEach(detach_dev);
			t64 = claim_space(table_nodes);
			tr2 = claim_element(table_nodes, "TR", {});
			var tr2_nodes = children(tr2);
			td5 = claim_element(tr2_nodes, "TD", { class: true });
			var td5_nodes = children(td5);
			label9 = claim_element(td5_nodes, "LABEL", { class: true });
			var label9_nodes = children(label9);
			t65 = claim_text(label9_nodes, t65_value);
			t66 = claim_text(label9_nodes, " в наличии");
			label9_nodes.forEach(detach_dev);
			td5_nodes.forEach(detach_dev);
			t67 = claim_space(tr2_nodes);
			td6 = claim_element(tr2_nodes, "TD", { class: true });
			var td6_nodes = children(td6);
			t68 = claim_text(td6_nodes, t68_value);
			td6_nodes.forEach(detach_dev);
			t69 = claim_space(tr2_nodes);
			td7 = claim_element(tr2_nodes, "TD", { rowspan: true, class: true });
			var td7_nodes = children(td7);
			t70 = claim_text(td7_nodes, t70_value);
			td7_nodes.forEach(detach_dev);
			tr2_nodes.forEach(detach_dev);
			t71 = claim_space(table_nodes);
			tr3 = claim_element(table_nodes, "TR", {});
			var tr3_nodes = children(tr3);
			td8 = claim_element(tr3_nodes, "TD", { class: true });
			var td8_nodes = children(td8);
			label10 = claim_element(td8_nodes, "LABEL", { class: true });
			var label10_nodes = children(label10);
			t72 = claim_text(label10_nodes, t72_value);
			t73 = claim_text(label10_nodes, " в ордерах");
			label10_nodes.forEach(detach_dev);
			td8_nodes.forEach(detach_dev);
			t74 = claim_space(tr3_nodes);
			td9 = claim_element(tr3_nodes, "TD", { class: true });
			var td9_nodes = children(td9);
			t75 = claim_text(td9_nodes, t75_value);
			td9_nodes.forEach(detach_dev);
			tr3_nodes.forEach(detach_dev);
			table_nodes.forEach(detach_dev);
			div15_nodes.forEach(detach_dev);
			div16_nodes.forEach(detach_dev);
			t76 = claim_space(main_nodes);
			div20 = claim_element(main_nodes, "DIV", { class: true });
			var div20_nodes = children(div20);
			div19 = claim_element(div20_nodes, "DIV", { class: true });
			var div19_nodes = children(div19);
			div17 = claim_element(div19_nodes, "DIV", { class: true });
			var div17_nodes = children(div17);
			label11 = claim_element(div17_nodes, "LABEL", { class: true });
			var label11_nodes = children(label11);
			t77 = claim_text(label11_nodes, "Продажи");
			label11_nodes.forEach(detach_dev);
			t78 = claim_space(div17_nodes);
			br12 = claim_element(div17_nodes, "BR", {});
			t79 = claim_space(div17_nodes);
			label12 = claim_element(div17_nodes, "LABEL", { class: true });
			var label12_nodes = children(label12);
			t80 = claim_text(label12_nodes, "Продажи сегодня");
			label12_nodes.forEach(detach_dev);
			t81 = claim_space(div17_nodes);
			br13 = claim_element(div17_nodes, "BR", {});
			t82 = claim_space(div17_nodes);
			label13 = claim_element(div17_nodes, "LABEL", { class: true });
			var label13_nodes = children(label13);
			t83 = claim_text(label13_nodes, "Ср. прибыль в сделке");
			label13_nodes.forEach(detach_dev);
			div17_nodes.forEach(detach_dev);
			t84 = claim_space(div19_nodes);
			div18 = claim_element(div19_nodes, "DIV", { class: true });
			var div18_nodes = children(div18);
			t85 = claim_text(div18_nodes, /*salesall*/ ctx[12]);
			t86 = claim_space(div18_nodes);
			br14 = claim_element(div18_nodes, "BR", {});
			t87 = claim_space(div18_nodes);
			strong1 = claim_element(div18_nodes, "STRONG", {});
			var strong1_nodes = children(strong1);
			t88 = claim_text(strong1_nodes, /*salestoday*/ ctx[20]);
			strong1_nodes.forEach(detach_dev);
			t89 = claim_text(div18_nodes, "\n                (");
			t90 = claim_text(div18_nodes, t90_value);
			t91 = claim_space(div18_nodes);
			t92 = claim_text(div18_nodes, t92_value);
			t93 = claim_text(div18_nodes, ")\n                ");
			br15 = claim_element(div18_nodes, "BR", {});
			t94 = claim_space(div18_nodes);
			t95 = claim_text(div18_nodes, t95_value);
			t96 = claim_space(div18_nodes);
			t97 = claim_text(div18_nodes, t97_value);
			div18_nodes.forEach(detach_dev);
			div19_nodes.forEach(detach_dev);
			div20_nodes.forEach(detach_dev);
			t98 = claim_space(main_nodes);
			div24 = claim_element(main_nodes, "DIV", { class: true });
			var div24_nodes = children(div24);
			div23 = claim_element(div24_nodes, "DIV", { class: true });
			var div23_nodes = children(div23);
			div21 = claim_element(div23_nodes, "DIV", { class: true });
			var div21_nodes = children(div21);
			label14 = claim_element(div21_nodes, "LABEL", { class: true });
			var label14_nodes = children(label14);
			t99 = claim_text(label14_nodes, "Открытых сделок");
			label14_nodes.forEach(detach_dev);
			t100 = claim_space(div21_nodes);
			br16 = claim_element(div21_nodes, "BR", {});
			t101 = claim_space(div21_nodes);
			label15 = claim_element(div21_nodes, "LABEL", { class: true });
			var label15_nodes = children(label15);
			t102 = claim_text(label15_nodes, "Средняя цена закупки");
			label15_nodes.forEach(detach_dev);
			div21_nodes.forEach(detach_dev);
			t103 = claim_space(div23_nodes);
			div22 = claim_element(div23_nodes, "DIV", { class: true });
			var div22_nodes = children(div22);
			t104 = claim_text(div22_nodes, t104_value);
			t105 = claim_space(div22_nodes);
			br17 = claim_element(div22_nodes, "BR", {});
			t106 = claim_space(div22_nodes);
			t107 = claim_text(div22_nodes, t107_value);
			t108 = claim_space(div22_nodes);
			t109 = claim_text(div22_nodes, t109_value);
			div22_nodes.forEach(detach_dev);
			div23_nodes.forEach(detach_dev);
			div24_nodes.forEach(detach_dev);
			t110 = claim_space(main_nodes);
			br18 = claim_element(main_nodes, "BR", {});
			t111 = claim_space(main_nodes);
			div27 = claim_element(main_nodes, "DIV", { class: true });
			var div27_nodes = children(div27);
			div25 = claim_element(div27_nodes, "DIV", { class: true });
			var div25_nodes = children(div25);
			label16 = claim_element(div25_nodes, "LABEL", { class: true });
			var label16_nodes = children(label16);
			t112 = claim_text(label16_nodes, t112_value);
			label16_nodes.forEach(detach_dev);
			t113 = claim_space(div25_nodes);
			br19 = claim_element(div25_nodes, "BR", {});
			t114 = claim_space(div25_nodes);
			claim_component(switch0.$$.fragment, div25_nodes);
			div25_nodes.forEach(detach_dev);
			t115 = claim_space(div27_nodes);
			div26 = claim_element(div27_nodes, "DIV", { class: true });
			var div26_nodes = children(div26);
			label17 = claim_element(div26_nodes, "LABEL", { class: true });
			var label17_nodes = children(label17);
			t116 = claim_text(label17_nodes, "Запрет на закуп");
			label17_nodes.forEach(detach_dev);
			t117 = claim_space(div26_nodes);
			br20 = claim_element(div26_nodes, "BR", {});
			t118 = claim_space(div26_nodes);
			claim_component(switch1.$$.fragment, div26_nodes);
			div26_nodes.forEach(detach_dev);
			div27_nodes.forEach(detach_dev);
			t119 = claim_space(main_nodes);
			div30 = claim_element(main_nodes, "DIV", { class: true });
			var div30_nodes = children(div30);
			div28 = claim_element(div30_nodes, "DIV", { class: true });
			var div28_nodes = children(div28);
			label18 = claim_element(div28_nodes, "LABEL", { class: true });
			var label18_nodes = children(label18);
			t120 = claim_text(label18_nodes, "Объем ордера");
			label18_nodes.forEach(detach_dev);
			t121 = claim_space(div28_nodes);
			br21 = claim_element(div28_nodes, "BR", {});
			t122 = claim_text(div28_nodes, "\n            ~ ");
			t123 = claim_text(div28_nodes, /*ordersizeinquota*/ ctx[14]);
			t124 = claim_space(div28_nodes);
			t125 = claim_text(div28_nodes, t125_value);
			t126 = claim_text(div28_nodes, ", ");
			t127 = claim_text(div28_nodes, /*ordersizeinbase*/ ctx[15]);
			t128 = claim_space(div28_nodes);
			t129 = claim_text(div28_nodes, t129_value);
			div28_nodes.forEach(detach_dev);
			t130 = claim_text(div30_nodes, "\n          \n        ");
			div29 = claim_element(div30_nodes, "DIV", { class: true });
			var div29_nodes = children(div29);
			claim_component(textfield1.$$.fragment, div29_nodes);
			div29_nodes.forEach(detach_dev);
			div30_nodes.forEach(detach_dev);
			t131 = claim_space(main_nodes);
			div33 = claim_element(main_nodes, "DIV", { class: true });
			var div33_nodes = children(div33);
			div31 = claim_element(div33_nodes, "DIV", { class: true });
			var div31_nodes = children(div31);
			claim_component(textfield2.$$.fragment, div31_nodes);
			div31_nodes.forEach(detach_dev);
			t132 = claim_text(div33_nodes, "\n          \n        ");
			div32 = claim_element(div33_nodes, "DIV", { class: true });
			var div32_nodes = children(div32);
			claim_component(textfield3.$$.fragment, div32_nodes);
			div32_nodes.forEach(detach_dev);
			div33_nodes.forEach(detach_dev);
			t133 = claim_space(main_nodes);
			div36 = claim_element(main_nodes, "DIV", { class: true });
			var div36_nodes = children(div36);
			div34 = claim_element(div36_nodes, "DIV", { class: true });
			var div34_nodes = children(div34);
			label19 = claim_element(div34_nodes, "LABEL", { class: true });
			var label19_nodes = children(label19);
			t134 = claim_text(label19_nodes, "Не закупать, если цена больше");
			label19_nodes.forEach(detach_dev);
			div34_nodes.forEach(detach_dev);
			t135 = claim_text(div36_nodes, "\n          \n        ");
			div35 = claim_element(div36_nodes, "DIV", { class: true });
			var div35_nodes = children(div35);
			claim_component(textfield4.$$.fragment, div35_nodes);
			div35_nodes.forEach(detach_dev);
			div36_nodes.forEach(detach_dev);
			t136 = claim_space(main_nodes);
			div39 = claim_element(main_nodes, "DIV", { class: true });
			var div39_nodes = children(div39);
			div37 = claim_element(div39_nodes, "DIV", { class: true });
			var div37_nodes = children(div37);
			label20 = claim_element(div37_nodes, "LABEL", { class: true });
			var label20_nodes = children(label20);
			t137 = claim_text(label20_nodes, "Не закупать, если цена меньше");
			label20_nodes.forEach(detach_dev);
			div37_nodes.forEach(detach_dev);
			t138 = claim_space(div39_nodes);
			div38 = claim_element(div39_nodes, "DIV", { class: true });
			var div38_nodes = children(div38);
			claim_component(textfield5.$$.fragment, div38_nodes);
			div38_nodes.forEach(detach_dev);
			div39_nodes.forEach(detach_dev);
			t139 = claim_space(main_nodes);
			claim_component(button0.$$.fragment, main_nodes);
			t140 = claim_space(main_nodes);
			br22 = claim_element(main_nodes, "BR", {});
			t141 = claim_space(main_nodes);
			br23 = claim_element(main_nodes, "BR", {});
			t142 = claim_space(main_nodes);
			claim_component(button1.$$.fragment, main_nodes);
			t143 = claim_space(main_nodes);
			br24 = claim_element(main_nodes, "BR", {});
			t144 = claim_space(main_nodes);
			br25 = claim_element(main_nodes, "BR", {});
			t145 = claim_space(main_nodes);
			claim_component(button2.$$.fragment, main_nodes);
			t146 = claim_space(main_nodes);
			br26 = claim_element(main_nodes, "BR", {});
			t147 = claim_space(main_nodes);
			br27 = claim_element(main_nodes, "BR", {});
			t148 = claim_space(main_nodes);
			claim_component(button3.$$.fragment, main_nodes);
			main_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(div0, "class", "foolrow svelte-soetfq");
			add_location(div0, file$1, 395, 12, 11406);
			attr_dev(div1, "class", "leftitem svelte-soetfq");
			add_location(div1, file$1, 394, 8, 11371);
			attr_dev(div2, "class", "row svelte-soetfq");
			add_location(div2, file$1, 393, 4, 11345);
			attr_dev(label0, "class", "svelte-soetfq");
			add_location(label0, file$1, 402, 12, 11630);
			add_location(br0, file$1, 403, 12, 11671);
			attr_dev(strong0, "class", "bg-white dark:bg-gray-900 text-black dark:text-white");
			add_location(strong0, file$1, 404, 12, 11690);
			attr_dev(div3, "class", "leftitem svelte-soetfq");
			add_location(div3, file$1, 401, 8, 11595);
			attr_dev(div4, "class", "row svelte-soetfq");
			add_location(div4, file$1, 400, 4, 11569);
			attr_dev(label1, "class", "svelte-soetfq");
			add_location(label1, file$1, 427, 12, 12445);
			add_location(br1, file$1, 428, 12, 12477);
			attr_dev(span0, "class", "inline-block bg-gray-200 rounded-full px-3 py-1 text-sm font-bold\n                text-gray-800");
			add_location(span0, file$1, 429, 12, 12496);
			add_location(br2, file$1, 434, 12, 12684);
			attr_dev(div5, "class", "leftitem svelte-soetfq");
			add_location(div5, file$1, 426, 8, 12410);
			attr_dev(label2, "class", "svelte-soetfq");
			add_location(label2, file$1, 438, 16, 12806);
			attr_dev(div6, "class", "rowbalanceitem svelte-soetfq");
			add_location(div6, file$1, 437, 12, 12761);
			attr_dev(label3, "class", "svelte-soetfq");
			add_location(label3, file$1, 441, 16, 12904);
			add_location(br3, file$1, 442, 16, 12941);
			attr_dev(span1, "class", "inline-block bg-gray-200 rounded-full px-3 py-1 text-sm font-semibold\n                    text-gray-700");
			add_location(span1, file$1, 443, 16, 12964);
			attr_dev(div7, "class", "rowbalanceitem svelte-soetfq");
			add_location(div7, file$1, 440, 12, 12859);
			attr_dev(label4, "class", "svelte-soetfq");
			add_location(label4, file$1, 450, 16, 13246);
			add_location(br4, file$1, 451, 16, 13285);
			attr_dev(span2, "class", "inline-block bg-gray-200 rounded-full px-3 py-1 text-sm font-semibold\n                    text-gray-700");
			add_location(span2, file$1, 452, 16, 13308);
			attr_dev(div8, "class", "rowbalanceitem svelte-soetfq");
			add_location(div8, file$1, 449, 12, 13201);
			attr_dev(div9, "class", "rightitem rowbalance svelte-soetfq");
			add_location(div9, file$1, 436, 8, 12714);
			attr_dev(div10, "class", "row svelte-soetfq");
			add_location(div10, file$1, 425, 4, 12384);
			attr_dev(label5, "class", "svelte-soetfq");
			add_location(label5, file$1, 463, 16, 13662);
			add_location(br5, file$1, 464, 16, 13707);
			add_location(span3, file$1, 465, 16, 13730);
			add_location(br6, file$1, 466, 16, 13771);
			add_location(span4, file$1, 467, 16, 13794);
			add_location(br7, file$1, 468, 16, 13843);
			attr_dev(div11, "class", "centereditem svelte-soetfq");
			add_location(div11, file$1, 462, 12, 13619);
			attr_dev(label6, "class", "svelte-soetfq");
			add_location(label6, file$1, 471, 16, 13924);
			add_location(br8, file$1, 472, 16, 13971);
			add_location(span5, file$1, 473, 16, 13994);
			add_location(br9, file$1, 474, 16, 14071);
			add_location(span6, file$1, 475, 16, 14094);
			add_location(br10, file$1, 476, 16, 14145);
			attr_dev(div12, "class", "centereditem svelte-soetfq");
			add_location(div12, file$1, 470, 12, 13881);
			attr_dev(div13, "class", "row svelte-soetfq");
			add_location(div13, file$1, 461, 8, 13589);
			attr_dev(div14, "class", "yelowkob svelte-soetfq");
			add_location(div14, file$1, 460, 4, 13558);
			attr_dev(label7, "class", "svelte-soetfq");
			add_location(label7, file$1, 485, 24, 14399);
			attr_dev(td0, "class", "cellleft svelte-soetfq");
			add_location(td0, file$1, 484, 20, 14353);
			attr_dev(td1, "class", "cellleft bordernull svelte-soetfq");
			add_location(td1, file$1, 487, 20, 14494);
			add_location(br11, file$1, 490, 24, 14709);
			attr_dev(td2, "rowspan", "2");
			attr_dev(td2, "class", "borderbootom borderleft svelte-soetfq");
			add_location(td2, file$1, 488, 20, 14573);
			attr_dev(tr0, "class", "bordernull svelte-soetfq");
			add_location(tr0, file$1, 483, 16, 14309);
			attr_dev(label8, "class", "svelte-soetfq");
			add_location(label8, file$1, 496, 24, 14967);
			attr_dev(td3, "class", "borderbootom cellleft svelte-soetfq");
			add_location(td3, file$1, 495, 20, 14908);
			attr_dev(td4, "class", "borderbootom cellleft svelte-soetfq");
			add_location(td4, file$1, 498, 20, 15062);
			add_location(tr1, file$1, 494, 16, 14883);
			attr_dev(label9, "class", "svelte-soetfq");
			add_location(label9, file$1, 502, 24, 15237);
			attr_dev(td5, "class", "cellleft svelte-soetfq");
			add_location(td5, file$1, 501, 20, 15191);
			attr_dev(td6, "class", "cellleft bordernull svelte-soetfq");
			add_location(td6, file$1, 504, 20, 15331);
			attr_dev(td7, "rowspan", "2");
			attr_dev(td7, "class", "borderleft svelte-soetfq");
			add_location(td7, file$1, 507, 20, 15493);
			add_location(tr2, file$1, 500, 16, 15166);
			attr_dev(label10, "class", "svelte-soetfq");
			add_location(label10, file$1, 513, 24, 15730);
			attr_dev(td8, "class", "cellleft svelte-soetfq");
			add_location(td8, file$1, 512, 20, 15684);
			attr_dev(td9, "class", "cellleft svelte-soetfq");
			add_location(td9, file$1, 515, 20, 15824);
			add_location(tr3, file$1, 511, 16, 15659);
			attr_dev(table, "class", "bordernull svelte-soetfq");
			add_location(table, file$1, 482, 12, 14266);
			attr_dev(div15, "class", "centereditem svelte-soetfq");
			add_location(div15, file$1, 481, 8, 14227);
			attr_dev(div16, "class", "row svelte-soetfq");
			add_location(div16, file$1, 480, 4, 14201);
			attr_dev(label11, "class", "svelte-soetfq");
			add_location(label11, file$1, 523, 16, 16049);
			add_location(br12, file$1, 524, 16, 16088);
			attr_dev(label12, "class", "svelte-soetfq");
			add_location(label12, file$1, 525, 16, 16111);
			add_location(br13, file$1, 526, 16, 16158);
			attr_dev(label13, "class", "svelte-soetfq");
			add_location(label13, file$1, 527, 16, 16181);
			attr_dev(div17, "class", "leftitem svelte-soetfq");
			add_location(div17, file$1, 522, 12, 16010);
			add_location(br14, file$1, 531, 16, 16315);
			add_location(strong1, file$1, 532, 16, 16338);
			add_location(br15, file$1, 534, 16, 16473);
			attr_dev(div18, "class", "rightitem svelte-soetfq");
			add_location(div18, file$1, 529, 12, 16248);
			attr_dev(div19, "class", "row svelte-soetfq");
			add_location(div19, file$1, 521, 8, 15980);
			attr_dev(div20, "class", "yelowkob svelte-soetfq");
			add_location(div20, file$1, 520, 4, 15949);
			attr_dev(label14, "class", "svelte-soetfq");
			add_location(label14, file$1, 544, 16, 16749);
			add_location(br16, file$1, 545, 16, 16796);
			attr_dev(label15, "class", "svelte-soetfq");
			add_location(label15, file$1, 546, 16, 16819);
			attr_dev(div21, "class", "leftitem svelte-soetfq");
			add_location(div21, file$1, 543, 12, 16710);
			add_location(br17, file$1, 550, 16, 16961);
			attr_dev(div22, "class", "rightitem svelte-soetfq");
			add_location(div22, file$1, 548, 12, 16886);
			attr_dev(div23, "class", "row svelte-soetfq");
			add_location(div23, file$1, 542, 8, 16680);
			attr_dev(div24, "class", "yelowkob svelte-soetfq");
			add_location(div24, file$1, 541, 4, 16649);
			add_location(br18, file$1, 556, 4, 17077);
			attr_dev(label16, "class", "svelte-soetfq");
			add_location(label16, file$1, 559, 12, 17149);
			add_location(br19, file$1, 560, 12, 17212);
			attr_dev(div25, "class", "leftitem svelte-soetfq");
			add_location(div25, file$1, 558, 8, 17114);
			attr_dev(label17, "class", "svelte-soetfq");
			add_location(label17, file$1, 564, 12, 17323);
			add_location(br20, file$1, 565, 12, 17366);
			attr_dev(div26, "class", "rightitem svelte-soetfq");
			add_location(div26, file$1, 563, 8, 17287);
			attr_dev(div27, "class", "row svelte-soetfq");
			add_location(div27, file$1, 557, 4, 17088);
			attr_dev(label18, "class", "svelte-soetfq");
			add_location(label18, file$1, 584, 12, 17907);
			add_location(br21, file$1, 585, 12, 17947);
			attr_dev(div28, "class", "leftitem svelte-soetfq");
			add_location(div28, file$1, 583, 8, 17872);
			attr_dev(div29, "class", "rightitem svelte-soetfq");
			add_location(div29, file$1, 589, 8, 18097);
			attr_dev(div30, "class", "row svelte-soetfq");
			add_location(div30, file$1, 582, 4, 17846);
			attr_dev(div31, "class", "leftitem svelte-soetfq");
			add_location(div31, file$1, 595, 8, 18276);
			attr_dev(div32, "class", "rightitem svelte-soetfq");
			add_location(div32, file$1, 599, 8, 18424);
			attr_dev(div33, "class", "row svelte-soetfq");
			add_location(div33, file$1, 594, 4, 18250);
			attr_dev(label19, "class", "svelte-soetfq");
			add_location(label19, file$1, 605, 12, 18628);
			attr_dev(div34, "class", "leftitem padtop5 svelte-soetfq");
			add_location(div34, file$1, 604, 8, 18585);
			attr_dev(div35, "class", "rightitem svelte-soetfq");
			add_location(div35, file$1, 608, 8, 18717);
			attr_dev(div36, "class", "row svelte-soetfq");
			add_location(div36, file$1, 603, 4, 18559);
			attr_dev(label20, "class", "svelte-soetfq");
			add_location(label20, file$1, 615, 12, 18937);
			attr_dev(div37, "class", "leftitem padtop5 svelte-soetfq");
			add_location(div37, file$1, 614, 8, 18894);
			attr_dev(div38, "class", "rightitem svelte-soetfq");
			add_location(div38, file$1, 617, 8, 19005);
			attr_dev(div39, "class", "row svelte-soetfq");
			add_location(div39, file$1, 613, 4, 18868);
			add_location(br22, file$1, 622, 4, 19219);
			add_location(br23, file$1, 623, 4, 19230);
			add_location(br24, file$1, 625, 4, 19307);
			add_location(br25, file$1, 626, 4, 19318);
			add_location(br26, file$1, 628, 4, 19421);
			add_location(br27, file$1, 629, 4, 19432);
			attr_dev(main, "class", "svelte-soetfq");
			add_location(main, file$1, 391, 0, 11333);
		},
		m: function mount(target, anchor) {
			insert_dev(target, main, anchor);
			append_dev(main, div2);
			append_dev(div2, div1);
			append_dev(div1, div0);
			mount_component(textfield0, div0, null);
			append_dev(main, t0);
			append_dev(main, div4);
			append_dev(div4, div3);
			append_dev(div3, label0);
			append_dev(label0, t1);
			append_dev(div3, t2);
			append_dev(div3, br0);
			append_dev(div3, t3);
			append_dev(div3, strong0);
			append_dev(strong0, t4);
			append_dev(main, t5);
			if (if_block) if_block.m(main, null);
			append_dev(main, t6);
			append_dev(main, div10);
			append_dev(div10, div5);
			append_dev(div5, label1);
			append_dev(label1, t7);
			append_dev(div5, t8);
			append_dev(div5, br1);
			append_dev(div5, t9);
			append_dev(div5, span0);
			append_dev(span0, t10);
			append_dev(div5, t11);
			append_dev(div5, br2);
			append_dev(div10, t12);
			append_dev(div10, div9);
			append_dev(div9, div6);
			append_dev(div6, label2);
			append_dev(label2, t13);
			append_dev(div9, t14);
			append_dev(div9, div7);
			append_dev(div7, label3);
			append_dev(label3, t15);
			append_dev(div7, t16);
			append_dev(div7, br3);
			append_dev(div7, t17);
			append_dev(div7, span1);
			append_dev(span1, t18);
			append_dev(div9, t19);
			append_dev(div9, div8);
			append_dev(div8, label4);
			append_dev(label4, t20);
			append_dev(div8, t21);
			append_dev(div8, br4);
			append_dev(div8, t22);
			append_dev(div8, span2);
			append_dev(span2, t23);
			append_dev(main, t24);
			append_dev(main, div14);
			append_dev(div14, div13);
			append_dev(div13, div11);
			append_dev(div11, label5);
			append_dev(label5, t25);
			append_dev(div11, t26);
			append_dev(div11, br5);
			append_dev(div11, t27);
			append_dev(div11, span3);
			append_dev(span3, t28);
			append_dev(div11, t29);
			append_dev(div11, br6);
			append_dev(div11, t30);
			append_dev(div11, span4);
			append_dev(span4, t31);
			append_dev(span4, t32);
			append_dev(span4, t33);
			append_dev(div11, t34);
			append_dev(div11, br7);
			append_dev(div13, t35);
			append_dev(div13, div12);
			append_dev(div12, label6);
			append_dev(label6, t36);
			append_dev(div12, t37);
			append_dev(div12, br8);
			append_dev(div12, t38);
			append_dev(div12, span5);
			append_dev(span5, t39);
			append_dev(div12, t40);
			append_dev(div12, br9);
			append_dev(div12, t41);
			append_dev(div12, span6);
			append_dev(span6, t42);
			append_dev(span6, t43);
			append_dev(span6, t44);
			append_dev(div12, t45);
			append_dev(div12, br10);
			append_dev(main, t46);
			append_dev(main, div16);
			append_dev(div16, div15);
			append_dev(div15, table);
			append_dev(table, tr0);
			append_dev(tr0, td0);
			append_dev(td0, label7);
			append_dev(label7, t47);
			append_dev(label7, t48);
			append_dev(tr0, t49);
			append_dev(tr0, td1);
			append_dev(td1, t50);
			append_dev(tr0, t51);
			append_dev(tr0, td2);
			append_dev(td2, t52);
			append_dev(td2, t53);
			append_dev(td2, br11);
			append_dev(td2, t54);
			append_dev(td2, t55);
			append_dev(td2, t56);
			append_dev(td2, t57);
			append_dev(td2, t58);
			append_dev(table, t59);
			append_dev(table, tr1);
			append_dev(tr1, td3);
			append_dev(td3, label8);
			append_dev(label8, t60);
			append_dev(label8, t61);
			append_dev(tr1, t62);
			append_dev(tr1, td4);
			append_dev(td4, t63);
			append_dev(table, t64);
			append_dev(table, tr2);
			append_dev(tr2, td5);
			append_dev(td5, label9);
			append_dev(label9, t65);
			append_dev(label9, t66);
			append_dev(tr2, t67);
			append_dev(tr2, td6);
			append_dev(td6, t68);
			append_dev(tr2, t69);
			append_dev(tr2, td7);
			append_dev(td7, t70);
			append_dev(table, t71);
			append_dev(table, tr3);
			append_dev(tr3, td8);
			append_dev(td8, label10);
			append_dev(label10, t72);
			append_dev(label10, t73);
			append_dev(tr3, t74);
			append_dev(tr3, td9);
			append_dev(td9, t75);
			append_dev(main, t76);
			append_dev(main, div20);
			append_dev(div20, div19);
			append_dev(div19, div17);
			append_dev(div17, label11);
			append_dev(label11, t77);
			append_dev(div17, t78);
			append_dev(div17, br12);
			append_dev(div17, t79);
			append_dev(div17, label12);
			append_dev(label12, t80);
			append_dev(div17, t81);
			append_dev(div17, br13);
			append_dev(div17, t82);
			append_dev(div17, label13);
			append_dev(label13, t83);
			append_dev(div19, t84);
			append_dev(div19, div18);
			append_dev(div18, t85);
			append_dev(div18, t86);
			append_dev(div18, br14);
			append_dev(div18, t87);
			append_dev(div18, strong1);
			append_dev(strong1, t88);
			append_dev(div18, t89);
			append_dev(div18, t90);
			append_dev(div18, t91);
			append_dev(div18, t92);
			append_dev(div18, t93);
			append_dev(div18, br15);
			append_dev(div18, t94);
			append_dev(div18, t95);
			append_dev(div18, t96);
			append_dev(div18, t97);
			append_dev(main, t98);
			append_dev(main, div24);
			append_dev(div24, div23);
			append_dev(div23, div21);
			append_dev(div21, label14);
			append_dev(label14, t99);
			append_dev(div21, t100);
			append_dev(div21, br16);
			append_dev(div21, t101);
			append_dev(div21, label15);
			append_dev(label15, t102);
			append_dev(div23, t103);
			append_dev(div23, div22);
			append_dev(div22, t104);
			append_dev(div22, t105);
			append_dev(div22, br17);
			append_dev(div22, t106);
			append_dev(div22, t107);
			append_dev(div22, t108);
			append_dev(div22, t109);
			append_dev(main, t110);
			append_dev(main, br18);
			append_dev(main, t111);
			append_dev(main, div27);
			append_dev(div27, div25);
			append_dev(div25, label16);
			append_dev(label16, t112);
			append_dev(div25, t113);
			append_dev(div25, br19);
			append_dev(div25, t114);
			mount_component(switch0, div25, null);
			append_dev(div27, t115);
			append_dev(div27, div26);
			append_dev(div26, label17);
			append_dev(label17, t116);
			append_dev(div26, t117);
			append_dev(div26, br20);
			append_dev(div26, t118);
			mount_component(switch1, div26, null);
			append_dev(main, t119);
			append_dev(main, div30);
			append_dev(div30, div28);
			append_dev(div28, label18);
			append_dev(label18, t120);
			append_dev(div28, t121);
			append_dev(div28, br21);
			append_dev(div28, t122);
			append_dev(div28, t123);
			append_dev(div28, t124);
			append_dev(div28, t125);
			append_dev(div28, t126);
			append_dev(div28, t127);
			append_dev(div28, t128);
			append_dev(div28, t129);
			append_dev(div30, t130);
			append_dev(div30, div29);
			mount_component(textfield1, div29, null);
			append_dev(main, t131);
			append_dev(main, div33);
			append_dev(div33, div31);
			mount_component(textfield2, div31, null);
			append_dev(div33, t132);
			append_dev(div33, div32);
			mount_component(textfield3, div32, null);
			append_dev(main, t133);
			append_dev(main, div36);
			append_dev(div36, div34);
			append_dev(div34, label19);
			append_dev(label19, t134);
			append_dev(div36, t135);
			append_dev(div36, div35);
			mount_component(textfield4, div35, null);
			append_dev(main, t136);
			append_dev(main, div39);
			append_dev(div39, div37);
			append_dev(div37, label20);
			append_dev(label20, t137);
			append_dev(div39, t138);
			append_dev(div39, div38);
			mount_component(textfield5, div38, null);
			append_dev(main, t139);
			mount_component(button0, main, null);
			append_dev(main, t140);
			append_dev(main, br22);
			append_dev(main, t141);
			append_dev(main, br23);
			append_dev(main, t142);
			mount_component(button1, main, null);
			append_dev(main, t143);
			append_dev(main, br24);
			append_dev(main, t144);
			append_dev(main, br25);
			append_dev(main, t145);
			mount_component(button2, main, null);
			append_dev(main, t146);
			append_dev(main, br26);
			append_dev(main, t147);
			append_dev(main, br27);
			append_dev(main, t148);
			mount_component(button3, main, null);
			current = true;
		},
		p: function update(ctx, dirty) {
			const textfield0_changes = {};

			if (!updating_value && dirty[0] & /*botsettings*/ 1) {
				updating_value = true;
				textfield0_changes.value = /*botsettings*/ ctx[0].comment;
				add_flush_callback(() => updating_value = false);
			}

			textfield0.$set(textfield0_changes);
			if ((!current || dirty[0] & /*botstatus*/ 4) && t4_value !== (t4_value = /*botstatus*/ ctx[2].rezhim + "")) set_data_dev(t4, t4_value);

			if (/*botstatus*/ ctx[2].currentfloor !== 0) {
				if (if_block) {
					if_block.p(ctx, dirty);

					if (dirty[0] & /*botstatus*/ 4) {
						transition_in(if_block, 1);
					}
				} else {
					if_block = create_if_block(ctx);
					if_block.c();
					transition_in(if_block, 1);
					if_block.m(main, t6);
				}
			} else if (if_block) {
				group_outros();

				transition_out(if_block, 1, 1, () => {
					if_block = null;
				});

				check_outros();
			}

			if (!current || dirty[0] & /*last_price*/ 16) set_data_dev(t10, /*last_price*/ ctx[4]);
			if ((!current || dirty[0] & /*botfinance*/ 2) && t18_value !== (t18_value = /*botfinance*/ ctx[1].startdepo + "")) set_data_dev(t18, t18_value);
			if ((!current || dirty[0] & /*botfinance*/ 2) && t23_value !== (t23_value = /*botfinance*/ ctx[1].depo + "")) set_data_dev(t23, t23_value);
			if (!current || dirty[0] & /*profitsum*/ 32) set_data_dev(t28, /*profitsum*/ ctx[5]);
			if (!current || dirty[0] & /*profitsumproc*/ 64) set_data_dev(t32, /*profitsumproc*/ ctx[6]);
			if ((!current || dirty[0] & /*salestodaysum, botsettings*/ 524289) && t39_value !== (t39_value = /*salestodaysum*/ ctx[19].toFixed(/*botsettings*/ ctx[0].digitprice) + "")) set_data_dev(t39, t39_value);
			if (!current || dirty[0] & /*profittodayproc*/ 262144) set_data_dev(t43, /*profittodayproc*/ ctx[18]);
			if ((!current || dirty[0] & /*botsettings*/ 1) && t47_value !== (t47_value = /*botsettings*/ ctx[0].quotacoin + "")) set_data_dev(t47, t47_value);
			if ((!current || dirty[0] & /*botfinance*/ 2) && t50_value !== (t50_value = /*botfinance*/ ctx[1].quotanal + "")) set_data_dev(t50, t50_value);
			if ((!current || dirty[0] & /*quotasum, botsettings*/ 129) && t52_value !== (t52_value = /*quotasum*/ ctx[7].toFixed(/*botsettings*/ ctx[0].digitq) + "")) set_data_dev(t52, t52_value);
			if ((!current || dirty[0] & /*last_price, quotasum, botsettings*/ 145) && t55_value !== (t55_value = (/*last_price*/ ctx[4] * /*quotasum*/ ctx[7]).toFixed(/*botsettings*/ ctx[0].digitq) + "")) set_data_dev(t55, t55_value);
			if ((!current || dirty[0] & /*botsettings*/ 1) && t57_value !== (t57_value = /*botsettings*/ ctx[0].basecoin + "")) set_data_dev(t57, t57_value);
			if ((!current || dirty[0] & /*botsettings*/ 1) && t60_value !== (t60_value = /*botsettings*/ ctx[0].quotacoin + "")) set_data_dev(t60, t60_value);
			if ((!current || dirty[0] & /*botfinance*/ 2) && t63_value !== (t63_value = /*botfinance*/ ctx[1].quotainorders + "")) set_data_dev(t63, t63_value);
			if ((!current || dirty[0] & /*botsettings*/ 1) && t65_value !== (t65_value = /*botsettings*/ ctx[0].basecoin + "")) set_data_dev(t65, t65_value);
			if ((!current || dirty[0] & /*botfinance, botsettings*/ 3) && t68_value !== (t68_value = (/*botfinance*/ ctx[1].basenal * 1).toFixed(/*botsettings*/ ctx[0].digitprice) + "")) set_data_dev(t68, t68_value);
			if ((!current || dirty[0] & /*basesum, botsettings*/ 257) && t70_value !== (t70_value = /*basesum*/ ctx[8].toFixed(/*botsettings*/ ctx[0].digitprice) + "")) set_data_dev(t70, t70_value);
			if ((!current || dirty[0] & /*botsettings*/ 1) && t72_value !== (t72_value = /*botsettings*/ ctx[0].basecoin + "")) set_data_dev(t72, t72_value);
			if ((!current || dirty[0] & /*botfinance*/ 2) && t75_value !== (t75_value = /*botfinance*/ ctx[1].baseinorders + "")) set_data_dev(t75, t75_value);
			if (!current || dirty[0] & /*salesall*/ 4096) set_data_dev(t85, /*salesall*/ ctx[12]);
			if (!current || dirty[0] & /*salestoday*/ 1048576) set_data_dev(t88, /*salestoday*/ ctx[20]);
			if ((!current || dirty[0] & /*salestodaysum, botsettings*/ 524289) && t90_value !== (t90_value = /*salestodaysum*/ ctx[19].toFixed(/*botsettings*/ ctx[0].digitprice) + "")) set_data_dev(t90, t90_value);
			if ((!current || dirty[0] & /*botsettings*/ 1) && t92_value !== (t92_value = /*botsettings*/ ctx[0].basecoin + "")) set_data_dev(t92, t92_value);
			if ((!current || dirty[0] & /*salesallsum, salesall, botsettings*/ 12289) && t95_value !== (t95_value = (/*salesallsum*/ ctx[13] / /*salesall*/ ctx[12] || 0).toFixed(/*botsettings*/ ctx[0].digitprice) + "")) set_data_dev(t95, t95_value);
			if ((!current || dirty[0] & /*botsettings*/ 1) && t97_value !== (t97_value = /*botsettings*/ ctx[0].basecoin + "")) set_data_dev(t97, t97_value);
			if ((!current || dirty[0] & /*openfloors*/ 131072) && t104_value !== (t104_value = /*openfloors*/ ctx[17].count + "")) set_data_dev(t104, t104_value);
			if ((!current || dirty[0] & /*openfloors*/ 131072) && t107_value !== (t107_value = /*openfloors*/ ctx[17].sprice + "")) set_data_dev(t107, t107_value);
			if ((!current || dirty[0] & /*botsettings*/ 1) && t109_value !== (t109_value = /*botsettings*/ ctx[0].basecoin + "")) set_data_dev(t109, t109_value);
			if ((!current || dirty[0] & /*botonoff*/ 8) && t112_value !== (t112_value = (/*botonoff*/ ctx[3] ? "Включен" : "Выключен") + "")) set_data_dev(t112, t112_value);
			const switch0_changes = {};

			if (!updating_value_1 && dirty[0] & /*botonoff*/ 8) {
				updating_value_1 = true;
				switch0_changes.value = /*botonoff*/ ctx[3];
				add_flush_callback(() => updating_value_1 = false);
			}

			switch0.$set(switch0_changes);
			const switch1_changes = {};

			if (!updating_value_2 && dirty[0] & /*botsettings*/ 1) {
				updating_value_2 = true;
				switch1_changes.value = /*botsettings*/ ctx[0].handyzapretnazakup;
				add_flush_callback(() => updating_value_2 = false);
			}

			switch1.$set(switch1_changes);
			if (!current || dirty[0] & /*ordersizeinquota*/ 16384) set_data_dev(t123, /*ordersizeinquota*/ ctx[14]);
			if ((!current || dirty[0] & /*botsettings*/ 1) && t125_value !== (t125_value = /*botsettings*/ ctx[0].quotacoin + "")) set_data_dev(t125, t125_value);
			if (!current || dirty[0] & /*ordersizeinbase*/ 32768) set_data_dev(t127, /*ordersizeinbase*/ ctx[15]);
			if ((!current || dirty[0] & /*botsettings*/ 1) && t129_value !== (t129_value = /*botsettings*/ ctx[0].basecoin + "")) set_data_dev(t129, t129_value);
			const textfield1_changes = {};

			if (!updating_value_3 && dirty[0] & /*botsettings*/ 1) {
				updating_value_3 = true;
				textfield1_changes.value = /*botsettings*/ ctx[0].ordersize;
				add_flush_callback(() => updating_value_3 = false);
			}

			textfield1.$set(textfield1_changes);
			const textfield2_changes = {};

			if (!updating_value_4 && dirty[0] & /*botsettings*/ 1) {
				updating_value_4 = true;
				textfield2_changes.value = /*botsettings*/ ctx[0].ma1;
				add_flush_callback(() => updating_value_4 = false);
			}

			textfield2.$set(textfield2_changes);
			const textfield3_changes = {};

			if (!updating_value_5 && dirty[0] & /*botsettings*/ 1) {
				updating_value_5 = true;
				textfield3_changes.value = /*botsettings*/ ctx[0].ma2;
				add_flush_callback(() => updating_value_5 = false);
			}

			textfield3.$set(textfield3_changes);
			const textfield4_changes = {};

			if (!updating_value_6 && dirty[0] & /*botsettings*/ 1) {
				updating_value_6 = true;
				textfield4_changes.value = /*botsettings*/ ctx[0].maxpriceforzakup;
				add_flush_callback(() => updating_value_6 = false);
			}

			textfield4.$set(textfield4_changes);
			const textfield5_changes = {};

			if (!updating_value_7 && dirty[0] & /*botsettings*/ 1) {
				updating_value_7 = true;
				textfield5_changes.value = /*botsettings*/ ctx[0].minpriceforzakup;
				add_flush_callback(() => updating_value_7 = false);
			}

			textfield5.$set(textfield5_changes);
			const button0_changes = {};

			if (dirty[2] & /*$$scope*/ 1) {
				button0_changes.$$scope = { dirty, ctx };
			}

			button0.$set(button0_changes);
			const button1_changes = {};

			if (dirty[2] & /*$$scope*/ 1) {
				button1_changes.$$scope = { dirty, ctx };
			}

			button1.$set(button1_changes);
			const button2_changes = {};

			if (dirty[2] & /*$$scope*/ 1) {
				button2_changes.$$scope = { dirty, ctx };
			}

			button2.$set(button2_changes);
			const button3_changes = {};

			if (dirty[2] & /*$$scope*/ 1) {
				button3_changes.$$scope = { dirty, ctx };
			}

			button3.$set(button3_changes);
		},
		i: function intro(local) {
			if (current) return;
			transition_in(textfield0.$$.fragment, local);
			transition_in(if_block);
			transition_in(switch0.$$.fragment, local);
			transition_in(switch1.$$.fragment, local);
			transition_in(textfield1.$$.fragment, local);
			transition_in(textfield2.$$.fragment, local);
			transition_in(textfield3.$$.fragment, local);
			transition_in(textfield4.$$.fragment, local);
			transition_in(textfield5.$$.fragment, local);
			transition_in(button0.$$.fragment, local);
			transition_in(button1.$$.fragment, local);
			transition_in(button2.$$.fragment, local);
			transition_in(button3.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(textfield0.$$.fragment, local);
			transition_out(if_block);
			transition_out(switch0.$$.fragment, local);
			transition_out(switch1.$$.fragment, local);
			transition_out(textfield1.$$.fragment, local);
			transition_out(textfield2.$$.fragment, local);
			transition_out(textfield3.$$.fragment, local);
			transition_out(textfield4.$$.fragment, local);
			transition_out(textfield5.$$.fragment, local);
			transition_out(button0.$$.fragment, local);
			transition_out(button1.$$.fragment, local);
			transition_out(button2.$$.fragment, local);
			transition_out(button3.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(main);
			destroy_component(textfield0);
			if (if_block) if_block.d();
			destroy_component(switch0);
			destroy_component(switch1);
			destroy_component(textfield1);
			destroy_component(textfield2);
			destroy_component(textfield3);
			destroy_component(textfield4);
			destroy_component(textfield5);
			destroy_component(button0);
			destroy_component(button1);
			destroy_component(button2);
			destroy_component(button3);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$1.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function sumsales(arr) {
	let sum = 0;

	arr.forEach(element => {
		sum = sum + element[5];
	});

	return sum;
}

function instance$1($$self, $$props, $$invalidate) {
	let $stateStore;
	validate_store(stateStore, "stateStore");
	component_subscribe($$self, stateStore, $$value => $$invalidate(42, $stateStore = $$value));
	var selectbotname = $stateStore.selectbotname;
	let urlhost = $stateStore.urlhost;
	let botsettingsjson = urlhost + "bot_settings";
	let botonoffjson = urlhost + "bot_onoff";
	let botfinancejson = urlhost + "api/data-finance.php";
	let botfloorsjson = urlhost + "api/data-floors.php";
	let botsalesjson = urlhost + "api/data-sales.php";
	let botstatusjson = urlhost + "bot_full";
	let changesettingsjson = urlhost + "api/changesettings.php";
	let resetsettingsjson = urlhost + "bot_reset";
	let deleteboturl = urlhost + "bot_delete";
	let botfullstatusurl = urlhost + "api/data-fullstatus.php";
	let panicsaleurl = urlhost + "api/panicsale.php";
	let botfullstatus = [];
	let botsettings = [];
	let botfinance = [];
	let botfloors = [];
	let botsales = [];
	let botstatus = [];
	let botonoff = [];
	let last_price = 0;
	let salestodayarr = [];
	let salesallarr = [];

	function loadsettings(selectbotid) {
		let myHeaders = new Headers();
		myHeaders.append("Content-Type", "application/json");
		let raw = JSON.stringify({ botname: selectbotid });

		let requestOptions = {
			method: "POST",
			headers: myHeaders,
			body: raw,
			redirect: "follow"
		};

		fetch(botsettingsjson, requestOptions).then(response => response.json()).then(result => {
			console.log(result);
			$$invalidate(0, botsettings = result);
		}).catch(error => console.log("error", error));
	}

	function getonoff(selectbotid) {
		let myHeaders = new Headers();
		myHeaders.append("Content-Type", "application/json");
		let raw = JSON.stringify({ botname: selectbotid });

		let requestOptions = {
			method: "POST",
			headers: myHeaders,
			body: raw,
			redirect: "follow"
		};

		fetch(botonoffjson, requestOptions).then(response => response.json()).then(result => {
			console.log(result);
			$$invalidate(3, botonoff = result);
		}).catch(error => console.log("error", error));
	}

	function savesettings() {
		//botsettings.isrunning = !botsettings.isrunning;
		fetch(changesettingsjson, {
			method: "post",
			headers: {
				Accept: "application/json, text/plain, */*",
				"Content-Type": "application/json"
			},
			body: JSON.stringify(botsettings)
		});

		function goback() {
			selectbotname = "";
			set_store_value(stateStore, $stateStore.rout = "botlist", $stateStore);
		}

		setTimeout(goback, 1000);
	}

	function resetsettings() {
		var myHeaders = new Headers();
		myHeaders.append("Content-Type", "application/json");
		var raw = JSON.stringify({ botname: selectbotname });

		var requestOptions = {
			method: "POST",
			headers: myHeaders,
			body: raw,
			redirect: "follow"
		};

		fetch(resetsettingsjson, requestOptions).then(response => response.json()).then(result => {
			console.log(result);
		});

		function goback() {
			selectbotname = "";
			set_store_value(stateStore, $stateStore.rout = "botlist", $stateStore);
		}

		setTimeout(goback, 1000);
	}

	function deletebot() {
		var myHeaders = new Headers();
		myHeaders.append("Content-Type", "application/json");
		var raw = JSON.stringify({ botname: selectbotname });

		var requestOptions = {
			method: "POST",
			headers: myHeaders,
			body: raw,
			redirect: "follow"
		};

		fetch(deleteboturl, requestOptions).then(response => response.json()).then(result => {
			console.log(result);
		});

		//$stateStore.rout = "botlist";
		//window.location = "/";
		function goback() {
			selectbotname = "";
			set_store_value(stateStore, $stateStore.rout = "botlist", $stateStore);
		}

		setTimeout(goback, 1000);
	}

	function panicsale() {
		if (panicsaleurl) {
			fetch(panicsaleurl, {
				method: "post",
				headers: {
					Accept: "application/json, text/plain, */*",
					"Content-Type": "application/json"
				},
				body: JSON.stringify(selectbotname)
			});
		} //$stateStore.rout = "botlist";
		//window.location = "/";
	} //function goback() {
	//    selectbotname = '';

	let bot;

	function fetchfullstatus(selectbotid) {
		console.log("selectbotid:" + selectbotid);
		let myHeaders2 = new Headers();
		myHeaders2.append("Content-Type", "application/json");
		let raw2 = JSON.stringify({ botname: selectbotid });

		let requestOptions2 = {
			method: "POST",
			headers: myHeaders2,
			body: raw2,
			redirect: "follow"
		};

		fetch(botstatusjson, requestOptions2).then(response => response.json()).then(result => {
			console.log(result);
			$$invalidate(4, last_price = Number(result.status.currentprice));
			$$invalidate(2, botstatus = result.status);

			//botsettings = result.settings;
			$$invalidate(1, botfinance = result.finance);

			$$invalidate(34, botfloors = result.floors);
			botsales = result.sales;
			$$invalidate(36, salestodayarr = botsales.today);
			$$invalidate(37, salesallarr = botsales.all);
		}).catch(error => console.log("error", error)); //botonoff = result.onoff;
	}

	loadsettings(selectbotname);

	//fetch1s();
	fetchfullstatus(selectbotname);

	getonoff(selectbotname);
	const timerId = setInterval(fetchfullstatus, 1000, selectbotname);
	set_store_value(stateStore, $stateStore.timerId = timerId, $stateStore);
	let profitsum = 0;
	let profitsumproc = 0;
	let quotasum = 0;
	let basesum = 0;

	//setInterval(fetch1s, 1000);
	let lowq;

	let low;
	let hight;
	let floornumber, f1, f2, f3;
	let salesall;
	let salesallsum, ordersizeinquota, ordersizeinbase, progress;
	let openfloors;

	function openfloorscalc(floors) {
		let count = 0;
		let srprice = 0;
		let sum = 0;
		let res;

		floors.forEach(function (item, i, floors) {
			if (item[7] === 2 || item[7] === 3) {
				count = count + 1;
				sum = Number(sum + Number(item[10]));
			}
		});

		if (count > 0) {
			srprice = (sum / count).toFixed(botsettings.digitprice);
			res = { count, sprice: srprice };
		} else {
			res = { count, sprice: srprice };
		}

		return res;
	}

	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console_1.warn(`<BotStatus> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("BotStatus", $$slots, []);

	function textfield0_value_binding(value) {
		botsettings.comment = value;
		$$invalidate(0, botsettings);
	}

	function switch0_value_binding(value) {
		botonoff = value;
		$$invalidate(3, botonoff);
	}

	function switch1_value_binding(value) {
		botsettings.handyzapretnazakup = value;
		$$invalidate(0, botsettings);
	}

	function textfield1_value_binding(value) {
		botsettings.ordersize = value;
		$$invalidate(0, botsettings);
	}

	function textfield2_value_binding(value) {
		botsettings.ma1 = value;
		$$invalidate(0, botsettings);
	}

	function textfield3_value_binding(value) {
		botsettings.ma2 = value;
		$$invalidate(0, botsettings);
	}

	function textfield4_value_binding(value) {
		botsettings.maxpriceforzakup = value;
		$$invalidate(0, botsettings);
	}

	function textfield5_value_binding(value) {
		botsettings.minpriceforzakup = value;
		$$invalidate(0, botsettings);
	}

	$$self.$capture_state = () => ({
		onMount,
		Switch,
		Button,
		TextField,
		ProgressLinear,
		stateStore,
		selectbotname,
		urlhost,
		botsettingsjson,
		botonoffjson,
		botfinancejson,
		botfloorsjson,
		botsalesjson,
		botstatusjson,
		changesettingsjson,
		resetsettingsjson,
		deleteboturl,
		botfullstatusurl,
		panicsaleurl,
		botfullstatus,
		botsettings,
		botfinance,
		botfloors,
		botsales,
		botstatus,
		botonoff,
		last_price,
		salestodayarr,
		salesallarr,
		loadsettings,
		getonoff,
		savesettings,
		resetsettings,
		deletebot,
		panicsale,
		sumsales,
		bot,
		fetchfullstatus,
		timerId,
		profitsum,
		profitsumproc,
		quotasum,
		basesum,
		lowq,
		low,
		hight,
		floornumber,
		f1,
		f2,
		f3,
		salesall,
		salesallsum,
		ordersizeinquota,
		ordersizeinbase,
		progress,
		openfloors,
		openfloorscalc,
		$stateStore,
		profittodayproc,
		salestodaysum,
		salestoday
	});

	$$self.$inject_state = $$props => {
		if ("selectbotname" in $$props) selectbotname = $$props.selectbotname;
		if ("urlhost" in $$props) urlhost = $$props.urlhost;
		if ("botsettingsjson" in $$props) botsettingsjson = $$props.botsettingsjson;
		if ("botonoffjson" in $$props) botonoffjson = $$props.botonoffjson;
		if ("botfinancejson" in $$props) botfinancejson = $$props.botfinancejson;
		if ("botfloorsjson" in $$props) botfloorsjson = $$props.botfloorsjson;
		if ("botsalesjson" in $$props) botsalesjson = $$props.botsalesjson;
		if ("botstatusjson" in $$props) botstatusjson = $$props.botstatusjson;
		if ("changesettingsjson" in $$props) changesettingsjson = $$props.changesettingsjson;
		if ("resetsettingsjson" in $$props) resetsettingsjson = $$props.resetsettingsjson;
		if ("deleteboturl" in $$props) deleteboturl = $$props.deleteboturl;
		if ("botfullstatusurl" in $$props) botfullstatusurl = $$props.botfullstatusurl;
		if ("panicsaleurl" in $$props) panicsaleurl = $$props.panicsaleurl;
		if ("botfullstatus" in $$props) botfullstatus = $$props.botfullstatus;
		if ("botsettings" in $$props) $$invalidate(0, botsettings = $$props.botsettings);
		if ("botfinance" in $$props) $$invalidate(1, botfinance = $$props.botfinance);
		if ("botfloors" in $$props) $$invalidate(34, botfloors = $$props.botfloors);
		if ("botsales" in $$props) botsales = $$props.botsales;
		if ("botstatus" in $$props) $$invalidate(2, botstatus = $$props.botstatus);
		if ("botonoff" in $$props) $$invalidate(3, botonoff = $$props.botonoff);
		if ("last_price" in $$props) $$invalidate(4, last_price = $$props.last_price);
		if ("salestodayarr" in $$props) $$invalidate(36, salestodayarr = $$props.salestodayarr);
		if ("salesallarr" in $$props) $$invalidate(37, salesallarr = $$props.salesallarr);
		if ("bot" in $$props) bot = $$props.bot;
		if ("profitsum" in $$props) $$invalidate(5, profitsum = $$props.profitsum);
		if ("profitsumproc" in $$props) $$invalidate(6, profitsumproc = $$props.profitsumproc);
		if ("quotasum" in $$props) $$invalidate(7, quotasum = $$props.quotasum);
		if ("basesum" in $$props) $$invalidate(8, basesum = $$props.basesum);
		if ("lowq" in $$props) $$invalidate(38, lowq = $$props.lowq);
		if ("low" in $$props) $$invalidate(9, low = $$props.low);
		if ("hight" in $$props) $$invalidate(10, hight = $$props.hight);
		if ("floornumber" in $$props) $$invalidate(11, floornumber = $$props.floornumber);
		if ("f1" in $$props) f1 = $$props.f1;
		if ("f2" in $$props) f2 = $$props.f2;
		if ("f3" in $$props) f3 = $$props.f3;
		if ("salesall" in $$props) $$invalidate(12, salesall = $$props.salesall);
		if ("salesallsum" in $$props) $$invalidate(13, salesallsum = $$props.salesallsum);
		if ("ordersizeinquota" in $$props) $$invalidate(14, ordersizeinquota = $$props.ordersizeinquota);
		if ("ordersizeinbase" in $$props) $$invalidate(15, ordersizeinbase = $$props.ordersizeinbase);
		if ("progress" in $$props) $$invalidate(16, progress = $$props.progress);
		if ("openfloors" in $$props) $$invalidate(17, openfloors = $$props.openfloors);
		if ("profittodayproc" in $$props) $$invalidate(18, profittodayproc = $$props.profittodayproc);
		if ("salestodaysum" in $$props) $$invalidate(19, salestodaysum = $$props.salestodaysum);
		if ("salestoday" in $$props) $$invalidate(20, salestoday = $$props.salestoday);
	};

	let profittodayproc;
	let salestoday;
	let salestodaysum;

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	$$self.$$.update = () => {
		if ($$self.$$.dirty[0] & /*botstatus*/ 4) {
			 if (!botstatus) {
				$$invalidate(2, botstatus = []);
				$$invalidate(2, botstatus.rezhim = "Подключаемся к серверу", botstatus);
			}
		}

		if ($$self.$$.dirty[0] & /*botfinance, botsettings*/ 3) {
			 $$invalidate(5, profitsum = (botfinance.depo - botfinance.startdepo).toFixed(botsettings.digitprice));
		}

		if ($$self.$$.dirty[0] & /*botfinance*/ 2) {
			 $$invalidate(6, profitsumproc = (botfinance.depo / botfinance.startdepo * 100 - 100).toFixed(2));
		}

		if ($$self.$$.dirty[0] & /*botfinance*/ 2) {
			 $$invalidate(7, quotasum = +botfinance.quotanal + +botfinance.quotainorders);
		}

		if ($$self.$$.dirty[0] & /*botfinance*/ 2) {
			 $$invalidate(8, basesum = +botfinance.basenal + +botfinance.baseinorders);
		}

		if ($$self.$$.dirty[1] & /*salestodayarr*/ 32) {
			 $$invalidate(19, salestodaysum = sumsales(salestodayarr));
		}

		if ($$self.$$.dirty[0] & /*salestodaysum, botfinance*/ 524290) {
			 $$invalidate(18, profittodayproc = (salestodaysum / botfinance.startdepo * 100).toFixed(2));
		}

		if ($$self.$$.dirty[0] & /*botstatus, botfinance, botsettings, ordersizeinquota, low, hight*/ 17927 | $$self.$$.dirty[1] & /*botfloors, lowq*/ 136) {
			 if (botstatus !== null) {
				$$invalidate(38, lowq = botfloors[botstatus.currentfloor - 1]);
				$$invalidate(14, ordersizeinquota = (botfinance.depo / 100 * botsettings.ordersize / botstatus.currentprice).toFixed(botsettings.digitq));
				$$invalidate(15, ordersizeinbase = (ordersizeinquota * botstatus.currentprice).toFixed(botsettings.digitprice));
				$$invalidate(16, progress = (botstatus.currentprice - low) / (hight - low) * 100);

				if (lowq) {
					$$invalidate(11, floornumber = lowq[0]);
					$$invalidate(9, low = lowq[1].toFixed(botsettings.digitprice));
					$$invalidate(10, hight = lowq[2].toFixed(botsettings.digitprice));
					f1 = lowq[3].toFixed(botsettings.digitprice);
					f2 = lowq[4].toFixed(botsettings.digitprice);
					f3 = lowq[5].toFixed(botsettings.digitprice);
				}
			}
		}

		if ($$self.$$.dirty[1] & /*salestodayarr*/ 32) {
			 $$invalidate(20, salestoday = salestodayarr.length);
		}

		if ($$self.$$.dirty[1] & /*salesallarr*/ 64) {
			 $$invalidate(12, salesall = salesallarr.length);
		}

		if ($$self.$$.dirty[1] & /*salesallarr*/ 64) {
			 $$invalidate(13, salesallsum = sumsales(salesallarr));
		}

		if ($$self.$$.dirty[1] & /*botfloors*/ 8) {
			 $$invalidate(17, openfloors = openfloorscalc(botfloors));
		}
	};

	return [
		botsettings,
		botfinance,
		botstatus,
		botonoff,
		last_price,
		profitsum,
		profitsumproc,
		quotasum,
		basesum,
		low,
		hight,
		floornumber,
		salesall,
		salesallsum,
		ordersizeinquota,
		ordersizeinbase,
		progress,
		openfloors,
		profittodayproc,
		salestodaysum,
		salestoday,
		savesettings,
		resetsettings,
		deletebot,
		panicsale,
		textfield0_value_binding,
		switch0_value_binding,
		switch1_value_binding,
		textfield1_value_binding,
		textfield2_value_binding,
		textfield3_value_binding,
		textfield4_value_binding,
		textfield5_value_binding
	];
}

class BotStatus extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$1, create_fragment$1, safe_not_equal, {}, [-1, -1, -1]);

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "BotStatus",
			options,
			id: create_fragment$1.name
		});
	}
}

/* src/routes/botstatuspage.svelte generated by Svelte v3.24.0 */
const file$2 = "src/routes/botstatuspage.svelte";

// (45:4) {:else}
function create_else_block(ctx) {
	let div1;
	let div0;
	let t0;
	let br0;
	let t1;
	let br1;
	let t2;
	let br2;
	let t3;
	let signinbutton;
	let current;

	signinbutton = new SignInButton({
			props: { provider: "google" },
			$$inline: true
		});

	const block = {
		c: function create() {
			div1 = element("div");
			div0 = element("div");
			t0 = text("Скачайте бесплатно или войдите в облако\n                ");
			br0 = element("br");
			t1 = space();
			br1 = element("br");
			t2 = space();
			br2 = element("br");
			t3 = space();
			create_component(signinbutton.$$.fragment);
			this.h();
		},
		l: function claim(nodes) {
			div1 = claim_element(nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			div0 = claim_element(div1_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			t0 = claim_text(div0_nodes, "Скачайте бесплатно или войдите в облако\n                ");
			br0 = claim_element(div0_nodes, "BR", {});
			t1 = claim_space(div0_nodes);
			br1 = claim_element(div0_nodes, "BR", {});
			t2 = claim_space(div0_nodes);
			br2 = claim_element(div0_nodes, "BR", {});
			t3 = claim_space(div0_nodes);
			claim_component(signinbutton.$$.fragment, div0_nodes);
			div0_nodes.forEach(detach_dev);
			div1_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			add_location(br0, file$2, 49, 16, 1011);
			add_location(br1, file$2, 50, 16, 1034);
			add_location(br2, file$2, 51, 16, 1057);
			attr_dev(div0, "class", "itemgrow svelte-15qh2zc");
			add_location(div0, file$2, 47, 12, 916);
			attr_dev(div1, "class", "headblock svelte-15qh2zc");
			add_location(div1, file$2, 45, 8, 879);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div1, anchor);
			append_dev(div1, div0);
			append_dev(div0, t0);
			append_dev(div0, br0);
			append_dev(div0, t1);
			append_dev(div0, br1);
			append_dev(div0, t2);
			append_dev(div0, br2);
			append_dev(div0, t3);
			mount_component(signinbutton, div0, null);
			current = true;
		},
		i: function intro(local) {
			if (current) return;
			transition_in(signinbutton.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(signinbutton.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(div1);
			destroy_component(signinbutton);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_else_block.name,
		type: "else",
		source: "(45:4) {:else}",
		ctx
	});

	return block;
}

// (38:4) {#if true}
function create_if_block$1(ctx) {
	let div1;
	let div0;
	let botstatus;
	let current;
	botstatus = new BotStatus({ $$inline: true });

	const block = {
		c: function create() {
			div1 = element("div");
			div0 = element("div");
			create_component(botstatus.$$.fragment);
			this.h();
		},
		l: function claim(nodes) {
			div1 = claim_element(nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			div0 = claim_element(div1_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			claim_component(botstatus.$$.fragment, div0_nodes);
			div0_nodes.forEach(detach_dev);
			div1_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(div0, "class", "itemgrow svelte-15qh2zc");
			add_location(div0, file$2, 40, 12, 774);
			attr_dev(div1, "class", "headblock svelte-15qh2zc");
			add_location(div1, file$2, 38, 8, 737);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div1, anchor);
			append_dev(div1, div0);
			mount_component(botstatus, div0, null);
			current = true;
		},
		i: function intro(local) {
			if (current) return;
			transition_in(botstatus.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(botstatus.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(div1);
			destroy_component(botstatus);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block$1.name,
		type: "if",
		source: "(38:4) {#if true}",
		ctx
	});

	return block;
}

function create_fragment$2(ctx) {
	let t;
	let div;
	let current_block_type_index;
	let if_block;
	let current;
	const if_block_creators = [create_if_block$1, create_else_block];
	const if_blocks = [];

	function select_block_type(ctx, dirty) {
		return 0;
	}

	current_block_type_index = select_block_type();
	if_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);

	const block = {
		c: function create() {
			t = space();
			div = element("div");
			if_block.c();
			this.h();
		},
		l: function claim(nodes) {
			const head_nodes = query_selector_all("[data-svelte=\"svelte-1qx629s\"]", document.head);
			head_nodes.forEach(detach_dev);
			t = claim_space(nodes);
			div = claim_element(nodes, "DIV", { class: true });
			var div_nodes = children(div);
			if_block.l(div_nodes);
			div_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			document.title = "Ti Trading Bot";
			attr_dev(div, "class", "mainflex svelte-15qh2zc");
			add_location(div, file$2, 33, 0, 643);
		},
		m: function mount(target, anchor) {
			insert_dev(target, t, anchor);
			insert_dev(target, div, anchor);
			if_blocks[current_block_type_index].m(div, null);
			current = true;
		},
		p: noop,
		i: function intro(local) {
			if (current) return;
			transition_in(if_block);
			current = true;
		},
		o: function outro(local) {
			transition_out(if_block);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t);
			if (detaching) detach_dev(div);
			if_blocks[current_block_type_index].d();
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$2.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$2($$self, $$props, $$invalidate) {
	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Botstatuspage> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("Botstatuspage", $$slots, []);

	$$self.$capture_state = () => ({
		stateStore,
		BotStatus,
		authStore,
		SignInButton
	});

	return [];
}

class Botstatuspage extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$2, create_fragment$2, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Botstatuspage",
			options,
			id: create_fragment$2.name
		});
	}
}

export default Botstatuspage;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
